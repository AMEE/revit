<?xml version="1.0"?>
<doc>
  <assembly>
        "RevitAPIUI"
    </assembly>
  <members>
    <member name="P:Autodesk.Revit.VSTA.VendorIdAttribute.Value">
      <summary>AddInId VendorId value.</summary>
      <since>2012</since>
    </member>
    <member name="M:Autodesk.Revit.VSTA.VendorIdAttribute.#ctor(System.String)">
      <summary>Constructs a new VendorIdAttribute.</summary>
      <since>2012</since>
    </member>
    <member name="T:Autodesk.Revit.VSTA.VendorIdAttribute">
      <summary> The custom VendorId attribute for VSTA macros use only.</summary>
      <since>2012</since>
    </member>
    <member name="P:Autodesk.Revit.VSTA.DocumentEntryPoint.AddinFolder">
      <summary> The full path to the Revit VSTA module. </summary>
      <remarks> This path should be used instead of the .NET GetExecutingAssembly() result, because
the VSTA module is loaded in such a way to make that result unreliable.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.OnShutdownEO">
      <summary> For Revit VSTA internal use only.</summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.FinishInitializationEO">
      <summary> For Revit VSTA internal use only.</summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.Initialize(System.Object,System.String)">
      <summary> For Revit VSTA internal use only.</summary>
    </member>
    <member name="T:Autodesk.Revit.VSTA.DocumentEntryPoint">
      <summary>For Revit VSTA use only.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.MessageBoxData.DialogType">
      <summary>
An integer that describes the standard windows type of the dialog box.
</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.MessageBoxData.Message">
      <summary>
The message that has been displayed in the dialog box.
</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.MessageBoxData">
      <summary>
An object that represents a simple message box that prompts the user
for some action.
</summary>
      <remarks>
When the application receives this object, a simple message box is displayed in Revit that
requires user interaction. The OverrideResult function can be used to cause the dialog
to be dismissed and return a desired result code.
</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.Events.DialogBoxData.OverrideResult(System.Int32)">
      <summary>
Call this method to cause the Autodesk Revit dialog to be dismissed with the specified return value.
</summary>
      <param name="result"> The result code you wish the Revit dialog to return. </param>
      <returns> Returns true if the result code was accepted. </returns>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.DialogBoxData.HelpId">
      <summary>
An ID that represents the dialog that has been displayed.
</summary>
      <remarks> Use this ID within your application to key suitable responses for the dialog. Note: this id is
not guaranteed to remain stable for different builds of Autodesk Revit.</remarks>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.DialogBoxData">
      <summary>
An object that is passed to your application when a dialog is displayed in Revit.
</summary>
      <remarks>
When the application receives this object, a dialog has been displayed in Revit that
requires user interaction. The OverrideResult function can be used to cause the dialog
to be dismissed and return a desired result code.
</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.TextBoxData.Image">
      <summary>The image of the TextBox.</summary>
      <remarks>The image will be shown on the left side of the item.
The best size is 16 x 16 pixels. </remarks>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.TextBoxData.#ctor(System.String)">
      <summary>Constructs a new instance of TextBoxData.</summary>
      <param name="name">The internal name of the TextBoxData.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when <see langword="null" /> is passed for name.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an empty string is passed for name.</exception>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.TextBoxData">
      <summary>This class contains information necessary to construct a text box in the Ribbon.</summary>
      <since>2011</since>
    </member>
    <member name="E:Autodesk.Revit.UI.TextBox.EnterPressed">
      <summary>Subscribe to this event to be notified when the Enter button is pressed in the text box. </summary>
    </member>
    <member name="P:Autodesk.Revit.UI.TextBox.Width">
      <summary>Gets or sets the width of the TextBox.</summary>
      <remarks>The value for this property must be positive and cannot be Infinity. 
This value is interpreted in device-independent units (1/96th inch) measurement
<a href="ms-help://MS.VSCC.v90/MS.MSDNQTR.v90.en/fxref_presentationframework/html/40f9e1d0-afab-e8eb-5eb5-f0499be66eca.htm">device-independent units</a>.
The default value is 200.
</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TextBox.ShowImageAsButton">
      <summary>Gets or sets a value that indicates if the Image set 
in the text box should be displayed as a clickable button.</summary>
      <remarks>If this property is true, the image will shown as a button inside the textbox.
Clicking this button will trigger the EnterPressed event. The default value 
is false.</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TextBox.Image">
      <summary>The image of the TextBox.</summary>
      <remarks>The image will be shown on the left side of the item.
The best size is 16 x 16 pixels. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TextBox.Value">
      <summary>The object that supplies the text value.</summary>
      <remarks>
The value assigned to the TextBox can be a <see cref="T:System.String" /> or any other data type. 
If the type is not a String the TextBox will display the return of the ToString() method. 
When the text is edited in the UI, the type of Value will always be <see cref="T:System.String" />.
</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TextBox.SelectTextOnFocus">
      <summary>
A value that indicates if the text is selected when the text box gains focus.
</summary>
      <remarks>If the value is true all the text in the text box will be selected when the text box gets keyboard 
focus. If it is false the text is not selected. The default value is false.</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TextBox.PromptText">
      <summary>The prompt text for the text box.</summary>
      <remarks>Prompt text is displayed when the text box is empty 
and does not have keyboard focus. This text is displayed in italics. The default value is <see langword="null" />.
</remarks>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.TextBox">
      <summary>The TextBox object represents text-based control that allows the user to enter text.</summary>
      <remarks>The ItemText property inherited from RibbonItem has no effect. 
The text entered in the TextBox is edited by the UI user is accepted only if the user presses the Enter key or click the image button when ShowImageAsButton is true. 
If the user clicks off of this component without pressing Enter or click the image button; then the text will be reverted to the previous value.
Use of this class is not supported in Revit VSTA.</remarks>
      <since>2011</since>
    </member>
    <member name="T:ElementSelectMenuManager">
Manages the element select sub menu and inserts them as a popup to 
the context menu that specified (namely ArrowEditor and MFCTreeView).
</member>
    <member name="M:getEndUserElementsWithGivenType(ADocument*,ElementId,ElementId,DBView*,Arr&lt;ElementId&gt;*)">
  Return in pIdArr all elements that have typeId as their type (as defined by what shows up in the Type Selector).
  If optionId is valid, find only the elements in the specified Design Option; otherwise (default), find all.
  If pDBView is set, find only in the elements of the DBView; otherwise (default), find in the entire model.
  Exclude elements not meaningful to the end user:
  a) Exclude elements in sketches and families.
  b) Exclude invisible stuff like symbols, surrogates, and invisible balusters.
  c) Exclude anything in a Legend View.
  d) Exclude anything that is filtered out by box-selection filter chain.
  Return the number found.
</member>
    <member name="M:Autodesk.Revit.UI.RadioButtonGroupData.#ctor(System.String)">
      <summary>Constructs a new instance of RadioButtonGroupData.</summary>
      <param name="name">The internal name of the RadioButtonGroup.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when <see langword="null" /> is passed for name.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an empty string is passed for name.</exception>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.RadioButtonGroupData">
      <summary>This class contains information necessary to construct a ribbon gallery in the Ribbon.</summary>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.RadioButtonGroup.GetItems">
      <summary>Gets the collection of ToggleButtons assigned to the RadioButtonGroup.</summary>
      <remarks>This is a copy of all the ToggleButtons assigned to this group.  
</remarks>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.RadioButtonGroup.AddItems(System.Collections.Generic.IList{Autodesk.Revit.UI.ToggleButtonData})">
      <summary>Adds new ToggleButtons to the RadioButtonGroup.</summary>
      <param name="buttonData">A list of objects containing the data needed to construct the ToggleButtons.  </param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when buttonData is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException"> 
Thrown when button with buttonData.Name already exists in the group.
</exception>
      <returns> The newly added ToggleButtons. </returns>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.RadioButtonGroup.AddItem(Autodesk.Revit.UI.ToggleButtonData)">
      <summary>Adds a new ToggleButton to the RadioButtonGroup.</summary>
      <param name="buttonData">An object containing the data needed to construct the ToggleButton.  </param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when buttonData is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException"> 
Thrown when button with buttonData.Name already exists in the group.
</exception>
      <returns> The newly added ToggleButton. </returns>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.RadioButtonGroup.Current">
      <summary>Gets or sets the current checked ToggleButton of the RadioButtonGroup.</summary>
      <remarks>
The default value is the first ToggleButton added to the group.
When using this property to set the current ToggleButton, the external command of that button will not be called.
</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when trying to set this property to <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when trying to set this property to a button not in this group.</exception>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.RadioButtonGroup">
      <summary>Represents a group of related buttons in the Ribbon. </summary>
      <remarks>
This class contains a collection of ToggleButtons. Only one of the ToggleButtons will appear active at a given time. 
When a different button is clicked in the UI the current ToggleButton will be changed, and the ToggleButton's external command will be invoked.
Use of this class is not supported in Revit VSTA.
</remarks>
      <since>2011</since>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\RibbonPanel.cs" region="Autodesk.Revit.UI.RadioButtonGroup" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\RibbonPanel.vb" region="Autodesk.Revit.UI.RadioButtonGroup" />
      </example>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.Application">
      <summary>Returns the database level Application represented by this UI level Application.</summary>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.AddinFolder">
      <summary> The full path to the Revit VSTA module. </summary>
      <remarks> This path should be used instead of the .NET GetExecutingAssembly() result, because
the VSTA module is loaded in such a way to make that result unreliable.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.OnShutdownEO">
      <summary> For Revit VSTA internal use only.</summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.FinishInitializationEO">
      <summary> For Revit VSTA internal use only.</summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.Initialize(System.Object,System.String)">
      <summary> For Revit VSTA internal use only.</summary>
    </member>
    <member name="T:Autodesk.Revit.VSTA.ApplicationEntryPoint">
      <summary>For Revit VSTA use only.</summary>
    </member>
    <member name="M:Autodesk.Revit.UI.TaskDialog.Show(System.String,System.String,Autodesk.Revit.UI.TaskDialogCommonButtons,Autodesk.Revit.UI.TaskDialogResult)">
      <summary> Shows a task dialog with title, main instruction, common buttons and default buttons. </summary>
      <param name="title"> The title of the task dialog. </param>
      <param name="mainInstruction"> The main instruction of the task dialog. </param>
      <param name="buttons"> The common buttons to be shown the task dialog. </param>
      <param name="defaultButton"> The default button of the task dialog. </param>
      <returns> The user's response to the task dialog. </returns>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.TaskDialog.Show(System.String,System.String,Autodesk.Revit.UI.TaskDialogCommonButtons)">
      <summary> Shows a task dialog with title, main instruction and common buttons. </summary>
      <param name="title"> The title of the task dialog. </param>
      <param name="mainInstruction"> The main instruction of the task dialog. </param>
      <param name="buttons"> The common buttons to be shown the task dialog. </param>
      <returns> The user's response to the task dialog. </returns>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.TaskDialog.Show(System.String,System.String)">
      <overloads> Shows a task dialog. </overloads>
      <summary> Shows a task dialog with title, main instruction and a Close button. </summary>
      <param name="title"> The title of the task dialog. </param>
      <param name="mainInstruction"> The main instruction of the task dialog. </param>
      <returns> The user's response to the task dialog. </returns>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.TaskDialog.WasVerificationChecked">
      <summary> Gets the status of the verification checkbox. </summary>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException"> Thrown when the task dialog does not have verification checkbox or the task dialog is not shown yet. </exception>
      <returns> Whether the verification checkbox is checked. </returns>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.TaskDialog.Show">
      <summary> Shows the task dialog. </summary>
      <returns> The user's response to the task dialog. </returns>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when 
the task dialog is shown out of main thread of Revit.</exception>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.TaskDialog.AddCommandLink(Autodesk.Revit.UI.TaskDialogCommandLinkId,System.String)">
      <summary> Adds a CommandLink associated to the given id, displaying the indicating main content. </summary>
      <param name="id"> The id of the CommandLink. This corresponds to the value returned by Show() when the link is chosen by the user. </param>
      <param name="mainContent"> The main content of the CommandLink.  </param>
      <remarks>
        <para> Parameter mainContent cannot contain newlines. </para>
        <para> If the id has already been set to the task dialog, the new CommandLink definition overrides the old one. </para>
        <para> CommandLinks will always be shown in the dialog in the order of their ids. </para>
      </remarks>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.TaskDialog.AddCommandLink(Autodesk.Revit.UI.TaskDialogCommandLinkId,System.String,System.String)">
      <overloads> Adds a CommandLink to the TaskDialog. </overloads>
      <summary> Adds a CommandLink associated to the given id, displaying the indicating main and supporting content. </summary>
      <param name="id"> The id of the CommandLink. This corresponds to the value returned by Show() when the link is chosen by the user. </param>
      <param name="mainContent"> The main content of the CommandLink. </param>
      <param name="supportingContent"> The main content of the CommandLink. </param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException"> Thrown when mainContent is <see langword="null" />. </exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException"> Thrown when mainContent is an empty string. </exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException"> Thrown when the mainContent contains newline characters. </exception>
      <remarks>
        <para> Parameter mainContent cannot contain newlines. </para>
        <para> If the id has already been set to the task dialog, the new CommandLink definition overrides the old one. </para>
        <para> CommandLinks will always be shown in the dialog in the order of their ids. </para>
      </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.TitleAutoPrefix">
      <summary> Whether the TaskDialog's title will automatically have the add-in name added as a prefix. </summary>
      <remarks> The default value is true. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.CommonButtons">
      <summary> The push buttons displayed in the task dialog. </summary>
      <remarks>
        <para> If no common button or CommandLink is added to the task dialog, the dialog will contain the Close common button by default.</para>
        <para>
Revit task dialogs are following these conventions for commit button usage:
<list type="bullet"><item> Use a single Close button instead of a single OK button on informational messages. </item><item> Use a question at the end of the Main Instruction with a Yes/No combo (or Yes/No/Cancel) instead of OK/Cancel. This should work 99% of the time. For example: “Are you sure you want to overwrite the file?” and use Yes/No buttons. </item><item> Do not customize the button names unless there is a very good reason to do so. For example, “Are you sure you want to save the file?” would use Yes/No buttons and not Save/No or Save/Cancel. </item></list></para>
      </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.MainIcon">
      <summary> The icon shown in the task dialog. </summary>
      <remarks>
        <para> There is no icon by default. </para>
        <para>
Task dialogs in Revit rarely use icons, to reduce the visual clutter shown to the user. Only one icon can be used 
in the task dialog, the Warning (!) icon, and it should be used only when there is a risk of data loss or 
significant time lost. If there is no data loss or time lost as a possible result of the message, do not use the icon. 
</para>
      </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.DefaultButton">
      <summary> The default button for the dialog. </summary>
      <remarks>
If DefaultButton is TaskDialogResult.None or its value does not correspond to any CommonButton or CommandLink in the dialog, 
then the first button in the dialog will be the default.
</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.AllowCancellation">
      <summary> Whether the task dialog can be cancelled if no cancel button is specified. </summary>
      <remarks> The default value is true. If there is a cancel button in the task dialog, the it always can be cancelled.</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.FooterText">
      <summary> FooterText is used in the footer area of the task dialog. </summary>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.VerificationText">
      <summary> VerificationText is used to label the verification checkbox. </summary>
      <remarks>
If VerificationText is set, a checkbox with the text will be shown. You can get the response of checkbox by checking the return value of the WasVerificationChecked() method.
</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.ExpandedContent">
      <summary> ExpandedContent is hidden by default and will display at the bottom of the task dialog when the "Show details" button is pressed. </summary>
      <remarks>
If added to a dialog, a Show/Hide toggle button displays at the bottom of the task dialog. The Expanded Content is hidden by default. 
This area is used when even more information needs to be relayed to the user than space allows. It is rarely used, but can be used for showing technical 
information passed through in a variable, for example back-end error information, lists of files, etc. 
Variable information should always be introduced with a lead-in sentence.
</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.MainContent">
      <summary> MainContent is the smaller text that appears just below the main instructions. </summary>
      <remarks>
The Main Content is optional. It should be used to give further explanation to the user, such as how to correct the problem or work around the situation. 
It displays in a smaller black font below the main instructions. Follow these guidelines:
<list type="bullet"><item> Text should be clear and jargon free. </item><item> Main content should not simply restate the main instructions in a different way, they should contain additional information 
    that builds upon or reinforces the main instructions. </item><item> Main content should be written in sentence format (normal capitalization and punctuation). </item><item> Address the user directly as “you” when needed. </item></list></remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.Id">
      <summary> The Id of the task dialog. </summary>
      <remarks>
Id is used as TaskDialogShowingEventArgs.DialogId for DialogBoxShowing events. 
</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.MainInstruction">
      <summary> The large primary text that appears at the top of a task dialog. </summary>
      <remarks>
        <para>
It should concisely sum up the problem or situation that is causing the message to display. Follow these guidelines:
<list type="bullet"><item> Every task dialog includes a main instruction. </item><item> Text should not exceed three lines. </item><item> Text should use plain language and be jargon free. </item><item> Main instructions should be written in sentence format – normal capitalization and punctuation. </item><item> Address the user directly as “you” when appropriate. </item><item> When presented with multiple command link options the standard final line for the main instructions should be,
  "What do you want to do?” </item></list></para>
        <para> Revit will automatically break lines to make the message fit well. "\n" also breaks down to the next line. For a paragraph break, use "\n\n". </para>
        <para> Hyperlinks added to the main instructions will not be enabled when the dialog is shown on Vista. </para>
      </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.TaskDialog.Title">
      <summary> Title of the task dialog. </summary>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException"> Thrown when setting the value to <see langword="null" />. </exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException"> Thrown when setting the value to an empty string or string contains newline characters. </exception>
      <remarks>
        <para> Titles of task dialogs should be unique. Do not reuse the same title for multiple task dialogs. </para>
        <para> Newline characters are not allowed in Title.</para>
        <para> 
When the dialogs is shown, Revit will put “External Command Name –“ or “External Application –“ in the front of the value by default. Examples:
<list type="bullet"><item> Plug-in Name – No Rooms to Calculate </item><item> Plug-in Name – Invalid Value for Length </item></list>
You can suppress it by setting TitleAutoPrefix to false.
</para>
        <para> 
Titles should describe the nature of the problem or state the situation that currently exists. 
The title tells the user why they are getting the message, not what they are supposed to do.
</para>
      </remarks>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.TaskDialog.#ctor(System.String)">
      <summary> Creates a task dialog with title. </summary>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException"> Thrown when title is <see langword="null" />. </exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException"> Thrown when title is an empty string. </exception>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.TaskDialog">
      <summary> A task dialog is a dialog box that can be used to display information and receive simple input from the user. It has a common set of controls  
that are arranged in a standard order to assure consistent look and feel. </summary>
      <remarks>
        <para>
There are two ways to create and show a task dialog to the user. The first option is to construct the TaskDialog, set its properties individually, and use
the instance method Show() to show it to the user. The second is to use one of the static Show() methods to construct and show the dialog in one step. 
When you use the static methods only a subset of the options can be specified.
</para>
        <para>
Please follow Revit standards to create task dialogs. The standards are listed in the remarks of each property or method. 
</para>
      </remarks>
      <since>2011</since>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\TaskDialogExample.cs" region="Autodesk.Revit.UI.TaskDialog" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\TaskDialogExample.vb" region="Autodesk.Revit.UI.TaskDialog" />
      </example>
    </member>
    <member name="T:Autodesk.Revit.UI.TaskDialogIcon">
      <summary> Standard icons to be used in the task dialog. </summary>
      <since>2011</since>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogIcon.TaskDialogIconWarning">
      <summary>Warning icon.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogIcon.TaskDialogIconNone">
      <summary>No icon.</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.TaskDialogResult">
      <summary> Enum to specify the task dialog result. </summary>
      <since>2011</since>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogResult.CommandLink4">
      <summary> The return value for CommandLink whose Id is TaskDialogCommmandLinkId.CommandLink4. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogResult.CommandLink3">
      <summary> The return value for CommandLink whose Id is TaskDialogCommmandLinkId.CommandLink3. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogResult.CommandLink2">
      <summary> The return value for CommandLink whose Id is TaskDialogCommmandLinkId.CommandLink2. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogResult.CommandLink1">
      <summary> The return value for CommandLink whose Id is TaskDialogCommmandLinkId.CommandLink1. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogResult.Close">
      <summary> The return value for TaskDialogCommonButtons.Close. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogResult.No">
      <summary> The return value for TaskDialogCommonButtons.No. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogResult.Yes">
      <summary> The return value for TaskDialogCommonButtons.Yes. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogResult.Retry">
      <summary> The return value for TaskDialogCommonButtons.Retry. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogResult.Cancel">
      <summary> The return value for TaskDialogCommonButtons.Cancel or the task dialog is cancelled by ESC, Alt+F4 or the X close button. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogResult.Ok">
      <summary> The return value for TaskDialogCommonButtons.Ok. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogResult.None">
      <summary> Nothing is returned from the task dialog. </summary>
    </member>
    <member name="T:Autodesk.Revit.UI.TaskDialogCommandLinkId">
      <summary> Enum to specify the Id of CommandLink. </summary>
      <since>2011</since>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogCommandLinkId.CommandLink4">
      <summary> CommandLink4. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogCommandLinkId.CommandLink3">
      <summary> CommandLink3. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogCommandLinkId.CommandLink2">
      <summary> CommandLink2. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogCommandLinkId.CommandLink1">
      <summary> CommandLink1. </summary>
    </member>
    <member name="T:Autodesk.Revit.UI.TaskDialogCommonButtons">
      <summary>A enumerated type containing the standard buttons available for Task Dialogs.</summary>
      <since>2011</since>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogCommonButtons.Close">
      <summary>Close button.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogCommonButtons.Retry">
      <summary>Retry button.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogCommonButtons.Cancel">
      <summary>Cancel button.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogCommonButtons.No">
      <summary>No button.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogCommonButtons.Yes">
      <summary>Yes button.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogCommonButtons.Ok">
      <summary>OK button.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.TaskDialogCommonButtons.None">
      <summary>No common button.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.ComboBoxData.Image">
      <summary>The image shown on the ComboBox.</summary>
      <remarks>The image will be shown on the left side of the item.
The best size is 16 x 16 pixels. </remarks>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.ComboBoxData.#ctor(System.String)">
      <summary>Constructs a new instance of ComboBoxData.</summary>
      <param name="name">The internal name of the ComboBoxMember.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when <see langword="null" /> is passed for name.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an empty string is passed for name.</exception>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.ComboBoxData">
      <summary>This class contains information necessary to construct a combo box in the Ribbon.</summary>
      <since>2011</since>
    </member>
    <member name="E:Autodesk.Revit.UI.ComboBox.CurrentChanged">
      <summary>Subscribe to this event to be notified when the current item of the ComboBox is changed.</summary>
    </member>
    <member name="E:Autodesk.Revit.UI.ComboBox.DropDownClosed">
      <summary>Subscribe to this event to be notified when the drop-down of the ComboBox is closed.</summary>
    </member>
    <member name="E:Autodesk.Revit.UI.ComboBox.DropDownOpened">
      <summary>Subscribe to this event to be notified when the drop-down of the ComboBox is opened. </summary>
    </member>
    <member name="M:Autodesk.Revit.UI.ComboBox.GetItems">
      <summary>Gets the copy of a collection of the ComboBoxMembers assigned to the ComboBox.</summary>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.ComboBox.AddSeparator">
      <summary>Adds a separator to the drop-down list.</summary>
      <remarks>The separator will be added below the last added member.</remarks>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.ComboBox.AddItems(System.Collections.Generic.IList{Autodesk.Revit.UI.ComboBoxMemberData})">
      <summary>Adds a new items to the ComboBox.</summary>
      <param name="memberData">An object list containing the data needed to construct the ComboBoxMember.  </param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when memberData is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException"> 
Thrown when button with memberData.Name already exists in the drop-down list.
</exception>
      <returns> The newly added ComboBoxMembers. </returns>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.ComboBox.AddItem(Autodesk.Revit.UI.ComboBoxMemberData)">
      <summary>Adds a new item to the ComboBox.</summary>
      <param name="memberData">An object containing the data needed to construct the ComboBoxMember.  </param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when memberData is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException"> 
Thrown when button with memberData.Name already exists in the drop-down list.
</exception>
      <returns> The newly added ComboBoxMember. </returns>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.ComboBox.Image">
      <summary>The image shown on the ComboBox.</summary>
      <remarks>The image will be shown on the left side of the item.
The best size is 16 x 16 pixels. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.ComboBox.Current">
      <summary>Gets or sets the current checked ComboBox member of the ComboBox.</summary>
      <remarks>
The default value is the first ComboBox member added to the ComboBox.            
</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when trying to set this property to <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when trying to set this property to a button not in this ComboBox.</exception>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.ComboBox">
      <summary>This class represents a selection control with a drop-down list that can be shown or hidden by clicking the arrow.</summary>
      <remarks>The order of items shown in the ComboBox depends upon the order which they were added, unless the ComboBoxMembers have been assigned to groups. 
If the members have been assigned groups, they will be sorted to fall under their groups regardless of the order in which they were added.
Use of this class is not supported in Revit VSTA.</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.ComboBoxMemberData.GroupName">
      <summary>Gets or sets a group name for the ComboBoxMember.</summary>
      <remarks>The GroupName is used to group the items and also appears in the group header.
All ComboBoxMembers assigned to the same group will be grouped in the ComboBox. There will be a header that shows the name.
The default value is <see langword="null" />.
</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.ComboBoxMemberData.Image">
      <summary>The image shown on the ComboBoxMember.</summary>
      <remarks>The image will be shown on the left side of the item when the item is added to a ComboBox.
The best size is 16 x 16 pixels. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.ComboBoxMemberData.Text">
      <summary>The user-visible text of the ComboBoxMember.</summary>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when setting the value to <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when setting the value to an empty string, 
or when the value contains invalid characters.</exception>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.ComboBoxMemberData.#ctor(System.String,System.String)">
      <summary>Constructs a new instance of ComboBoxMemberData.</summary>
      <param name="name">The internal name of the ComboBoxMember.</param>
      <param name="text">The user visible text seen on the item. </param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when <see langword="null" /> is passed for one or more arguments.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an empty string is passed for one or more arguments.</exception>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.ComboBoxMemberData">
      <summary>This class contains information necessary to construct a ComboBoxMember.</summary>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.ComboBoxMember.GroupName">
      <summary>The group to which the ComboBoxMember is assigned.</summary>
      <remarks>If set, the ComboBoxMember appears under a group header in the ComboBox. If <see langword="null" />, the ComboBoxMember is not a member of any group.
The default value is <see langword="null" />.           
</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.ComboBoxMember.Image">
      <summary>The image shown on the ComboBoxMember.</summary>
      <remarks>The image will be shown on the left side of the item.
The best size is 16 x 16 pixels. </remarks>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.ComboBoxMember">
      <summary>This class represents an item in the drop-down list of a ComboBox.</summary>
      <remarks>Note that a ComboBoxMember will not show an individual tool tip.
Use of this class is not supported in Revit VSTA.</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.VSTA.AddInIdAttribute.Value">
      <summary>AddInId guid value.</summary>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.VSTA.AddInIdAttribute.#ctor(System.String)">
      <summary>Constructs a new AddInIdAttribute.</summary>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.VSTA.AddInIdAttribute">
      <summary> The custom AddInId attribute for VSTA macros use only.</summary>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.Selection.Selection.StatusbarTip">
      <summary>The message displayed in the status bar tip when prompting the user to make a selection.</summary>
      <value>The message is displayed in the status bar at the bottom of the Autodesk Revit UI.</value>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.WindowSelect">
      <summary>Allows the user to select elements by a rectangle.</summary>
      <remarks>Note that the Revit user will not be allowed to select items in the Revit user interface except for Revit 
elements. This restriction also prevents users from closing the active document or the Revit application.
<para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para></remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user tried to close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>True if the user selected one or more elements, false if the user selected elsewhere in the UI</returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickOne">
      <summary>Allows the user to select one element.</summary>
      <remarks>Note that the Revit user will not be allowed to select items in the Revit user interface except for Revit 
elements. This restriction also prevents users from closing the active document or the Revit application.
<para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para></remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user tried to close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>True if the user selected an element, false if the user selected elsewhere in the UI</returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.GetElementIds">
      <summary>The ids of the elements that are currently selected.</summary>
      <remarks>Refers to the same set of elements as the Selection.Elements property. The collection returned by this method allows these elements to be processed
with the same filtering logic and FilteredElementCollector constructor as regular iterations.</remarks>
      <returns>A collection containing the ids of the selected elements.</returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickElementsByRectangle(Autodesk.Revit.UI.Selection.ISelectionFilter,System.String)">
      <summary>Prompts the user to select multiple elements by drawing a rectangle which pass a customer filter while showing a custom status prompt string.</summary>
      <param name="pSelFilter">The selection filter.</param>
      <param name="statusPrompt">The message shown on the status bar.</param>
      <remarks>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the pSelFilter is <see langword="null" /> or statusPrompt is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A collection of elements selected by the user. </para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickElementsByRectangle(Autodesk.Revit.UI.Selection.ISelectionFilter)">
      <summary>Prompts the user to select multiple elements by drawing a rectangle which pass a customer filter.</summary>
      <param name="pSelFilter">The selection filter.</param>
      <remarks>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the pSelFilter is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A collection of elements selected by the user. </para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickElementsByRectangle(System.String)">
      <summary>Prompts the user to select multiple elements by drawing a rectangle while showing a custom status prompt string.</summary>
      <param name="statusPrompt">The message shown on the status bar.</param>
      <remarks>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the statusPrompt is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A collection of elements selected by the user. </para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\Selection.cs" region="Autodesk.Revit.UI.Selection.Selection.PickElementsByRectangle(string)" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\Selection.vb" region="Autodesk.Revit.UI.Selection.Selection.PickElementsByRectangle(string)" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickElementsByRectangle">
      <overloads>Prompts the user to select multiple elements by drawing a rectangle.</overloads>
      <summary>Prompts the user to select multiple elements by drawing a rectangle.</summary>
      <remarks>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A collection of elements selected by the user. </para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickBox(Autodesk.Revit.UI.Selection.PickBoxStyle,System.String)">
      <summary>
Invokes a general purpose two-click editor that lets the user to specify a rectangular area on the screen.
</summary>
      <param name="style">Specifies the value that controls the style of the pick box.</param>
      <param name="statusPrompt">The message shown on the status bar.</param>
      <remarks>
The method starts an editor and returns when it finishes. Returns a PickedBox that contains two XYZ points.  
</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentOutOfRangeException">Thrown when the style is not a recognized value.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the argument statusPrompt is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.
</exception>
      <returns>The picked box that contains two XYZ points. </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickBox(Autodesk.Revit.UI.Selection.PickBoxStyle)">
      <summary>
Invokes a general purpose two-click editor that lets the user to specify a rectangular area on the screen.
</summary>
      <param name="style">Specifies the value that controls the style of the pick box.</param>
      <remarks>
The method starts an editor and returns when it finishes. Returns a PickedBox that contains two XYZ points. 
</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentOutOfRangeException">Thrown when the style is not a recognized value.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.
</exception>
      <returns>The picked box that contains two XYZ points. </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickPoint(Autodesk.Revit.UI.Selection.ObjectSnapTypes,System.String)">
      <summary>Prompts the user to pick a point on the active work plane using specified snap settings while showing a custom status prompt string.</summary>
      <param name="snapSettings">Specifies the object snap types for this pick. Multiple object snap types can be combined with "|"</param>
      <param name="statusPrompt">Specifies the message shown on the status bar.</param>
      <remarks>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.
<para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para></remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the argument statusPrompt is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when no work plane set in current view.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>The point picked by user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\Selection.cs" region="Autodesk.Revit.UI.Selection.Selection.PickPoint(Autodesk.Revit.UI.Selection.ObjectSnapTypes, string)" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\Selection.vb" region="Autodesk.Revit.UI.Selection.Selection.PickPoint(Autodesk.Revit.UI.Selection.ObjectSnapTypes, string)" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickPoint(System.String)">
      <summary>Prompts the user to pick a point on the active work plane while showing a custom status prompt string.</summary>
      <param name="statusPrompt">Specifies the message shown on the status bar.</param>
      <remarks>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.
<para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para></remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the argument statusPrompt is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when no work plane set in current view.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>The point picked by user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickPoint(Autodesk.Revit.UI.Selection.ObjectSnapTypes)">
      <summary>Prompts the user to pick a point on the active work plane using specified snap settings.</summary>
      <param name="snapSettings">Specifies the object snap types for this pick. Multiple object snap types can be combined with "|"</param>
      <remarks>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.
<para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para></remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when no work plane set in current view.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>The point picked by user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickPoint">
      <overloads>Prompts the user to pick a point on the active work plane.</overloads>
      <summary>Prompts the user to pick a point on the active work plane.</summary>
      <remarks>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.
<para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para></remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when no work plane set in current view.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>The point picked by user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickObjects(Autodesk.Revit.UI.Selection.ObjectType,Autodesk.Revit.UI.Selection.ISelectionFilter,System.String,System.Collections.Generic.IList{Autodesk.Revit.DB.Reference})">
      <summary>Prompts the user to select multiple objects which pass a custom filter while showing a custom status prompt string. A preselected set of objects may be supplied and will be selected at the start of the selection.</summary>
      <param name="objectType">Specifies the type of object to be selected.</param>
      <param name="pSelFilter">The selection filter.</param>
      <param name="statusPrompt">The message shown on the status bar.</param>
      <param name="pPreSelected">The previously selected set of objects.</param>
      <remarks>
        <para>The user will be shown "Finish" and "Cancel" buttons on the dialog bar to complete the selection operation. 
Uncheck the "Multiple" check-box to select single object and it will return the selected object directly.</para>
        <para>The previously selected set of objects will be highlighted.</para>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentOutOfRangeException">Thrown when the objectType is not a recognized value.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the pSelFilter is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when the Revit user cancelled this operation. 
Thrown when pPreSelected references has objects that are not the type of objectType.
Thrown when objectType is PointOnElement which is not supported for selection involving preselected items.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A collection of references selected by the user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickObjects(Autodesk.Revit.UI.Selection.ObjectType,Autodesk.Revit.UI.Selection.ISelectionFilter,System.String)">
      <summary>Prompts the user to select multiple objects which pass a custom filter while showing a custom status prompt string.</summary>
      <param name="objectType">Specifies the type of object to be selected.</param>
      <param name="pSelFilter">The selection filter.</param>
      <param name="statusPrompt">The message shown on the status bar.</param>
      <remarks>
        <para>The user will be shown "Finish" and "Cancel" buttons on the dialog bar to complete the selection operation. 
Uncheck the "Multiple" check-box to select single object and it will return the selected object directly.</para>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentOutOfRangeException">Thrown when the objectType is not a recognized value.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the pSelFilter is <see langword="null" /> or statusPrompt is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A collection of references selected by the user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\Selection.cs" region="Autodesk.Revit.UI.Selection.Selection.PickObjects(Autodesk.Revit.UI.Selection.ObjectType, Autodesk.Revit.UI.Selection.ISelectionFilter, string)" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\Selection.vb" region="Autodesk.Revit.UI.Selection.Selection.PickObjects(Autodesk.Revit.UI.Selection.ObjectType, Autodesk.Revit.UI.Selection.ISelectionFilter, string)" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickObjects(Autodesk.Revit.UI.Selection.ObjectType,Autodesk.Revit.UI.Selection.ISelectionFilter)">
      <summary>Prompts the user to select multiple objects which pass a customer filter.</summary>
      <param name="objectType">Specifies the type of object to be selected.</param>
      <param name="pSelFilter">The selection filter.</param>
      <remarks>
        <para>The user will be shown "Finish" and "Cancel" buttons on the dialog bar to complete the selection operation. 
Uncheck the "Multiple" check-box to select single object and it will return the selected object directly.</para>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentOutOfRangeException">Thrown when the objectType is not a recognized value.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the pSelFilter is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A collection of references selected by the user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickObjects(Autodesk.Revit.UI.Selection.ObjectType,System.String)">
      <summary>Prompts the user to select multiple objects while showing a custom status prompt string.</summary>
      <param name="objectType">Specifies the type of object to be selected.</param>
      <param name="statusPrompt">The message shown on the status bar.</param>
      <remarks>&gt;<para>The user will be shown "Finish" and "Cancel" buttons on the dialog bar to complete the selection operation. 
Uncheck the "Multiple" check-box to select single object and it will return the selected object directly.</para><para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para><para>The selection will not be automatically added to the active selection buffer.</para><para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para></remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentOutOfRangeException">Thrown when the objectType is not a recognized value.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the statusPrompt is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A collection of references selected by the user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickObjects(Autodesk.Revit.UI.Selection.ObjectType)">
      <overloads>Prompts the user to select multiple objects.</overloads>
      <summary>Prompts the user to select multiple objects.</summary>
      <param name="objectType">Specifies the type of object to be selected.</param>
      <remarks>
        <para>The user will be shown "Finish" and "Cancel" buttons on the dialog bar to complete the selection operation. 
Uncheck the "Multiple" check-box to select single object and it will return the selected object directly.</para>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentOutOfRangeException">Thrown when the objectType is not a recognized value.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A collection of references selected by the user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickObject(Autodesk.Revit.UI.Selection.ObjectType,Autodesk.Revit.UI.Selection.ISelectionFilter,System.String)">
      <summary>Prompts the user to select one object which passes a custom filter while showing a custom status prompt string.</summary>
      <param name="objectType">Specifies the type of object to be selected.</param>
      <param name="pSelFilter">The selection filter.</param>
      <param name="statusPrompt">The message shown on the status bar.</param>
      <remarks>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentOutOfRangeException">Thrown when the objectType is not a recognized value.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the pSelFilter is <see langword="null" /> or statusPrompt is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A reference object selected by user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickObject(Autodesk.Revit.UI.Selection.ObjectType,Autodesk.Revit.UI.Selection.ISelectionFilter)">
      <summary>Prompts the user to select one object which passes a custom filter.</summary>
      <param name="objectType">Specifies the type of object to be selected.</param>
      <param name="pSelFilter">The selection filter.</param>
      <remarks>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentOutOfRangeException">Thrown when the objectType is not a recognized value.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the pSelFilter is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A reference object selected by user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickObject(Autodesk.Revit.UI.Selection.ObjectType,System.String)">
      <summary>Prompts the user to select one object while showing a custom status prompt string.</summary>
      <param name="objectType">Specifies the type of object to be selected.</param>
      <param name="statusPrompt">The message shown on the status bar.</param>
      <remarks>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentOutOfRangeException">Thrown when the objectType is not a recognized value.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when the statusPrompt is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancelled this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A reference object selected by user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.Selection.PickObject(Autodesk.Revit.UI.Selection.ObjectType)">
      <overloads>Prompts the user to select one object.</overloads>
      <summary>Prompts the user to select one object.</summary>
      <param name="objectType">Specifies the type of object to be selected.</param>
      <remarks>
        <para>Revit users will be permitted to manipulate the Revit view (zooming, panning, and rotating the view), 
but will not be permitted to click other items in the Revit user interface. 
Users are not permitted to switch the active view, close the active document or Revit application in the pick session, otherwise an exception will be thrown.</para>
        <para>The selection will not be automatically added to the active selection buffer.</para>
        <para>Note: this method must not be called during dynamic update, otherwise ForbiddenForDynamicUpdateException will be thrown.</para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentOutOfRangeException">Thrown when the objectType is not a recognized value.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.OperationCanceledException">Thrown when the Revit user cancels this operation. 
Thrown when the Revit user tried to switch the active view, close the active document or Revit application when responding to this mode.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
      <returns>
        <para>A reference object selected by user.</para>
        <para>Note: if the user cancels the operation (for example, through ESC), the method will throw an OperationCanceledException instance. </para>
      </returns>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\Selection.cs" region="Autodesk.Revit.UI.Selection.Selection.PickObject(Autodesk.Revit.UI.Selection.ObjectType)" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\Selection.vb" region="Autodesk.Revit.UI.Selection.Selection.PickObject(Autodesk.Revit.UI.Selection.ObjectType)" />
      </example>
    </member>
    <member name="P:Autodesk.Revit.UI.Selection.Selection.Elements">
      <summary>The elements that are shown as selected in the Revit user-interface.</summary>
      <value>The selected elements.</value>
      <remarks>PickOne and WindowSelect add to this set because they modify the set of elements selected in the user-interface
after the External Command is complete. Selections made with PickObject, PickObjects, and PickElementsByRectangle do not
persist after the External Command is complete, and therefore they do not affect this property. </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit_Elements\Selection.cs" region="Autodesk.Revit.UI.Selection.Selection.Elements" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit_Elements\Selection.vb" region="Autodesk.Revit.UI.Selection.Selection.Elements" />
      </example>
    </member>
    <member name="T:Autodesk.Revit.UI.Selection.Selection">
      <summary>Contains the current user selection of elements within the project.</summary>
      <remarks>The Selection object is used to retrieve the current user selected elements when an
external API command is executed.</remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\Document_Selection.cs" region="Autodesk.Revit.UI.Selection.Selection" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\Document_Selection.vb" region="Autodesk.Revit.UI.Selection.Selection" />
      </example>
    </member>
    <member name="P:Autodesk.Revit.UI.Selection.PickedBox.Max">
      <summary>Maximum coordinates (upper-right-front corner of the pick box).</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.Selection.PickedBox.Min">
      <summary>Minimum coordinates (lower-left-rear corner of the pick box).</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Selection.PickedBox">
      <summary>A class that contains two XYZ points representing the pick box on the screen.</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Selection.PickBoxStyle">
      <summary> The enum that controls the style of the pick box. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.PickBoxStyle.Directional">
      <summary> The style of the box depends on the direction in which the box is being drawn. It uses the Crossing style if it is being drawn from right to left, or the Enclosing style when drawn in the opposite direction. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.PickBoxStyle.Enclosing">
      <summary> Draws the box with the style that is used when selecting objects that are completely enclosed by the box.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.PickBoxStyle.Crossing">
      <summary> Draws the box with the style that is used when selecting objects completely or partially inside the box. </summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Selection.ObjectSnapTypes">
      <summary>This enumerated type contains object snap types allowed to be set during PickPoint operations.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectSnapTypes.Points">
      <summary> Snaps to site points. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectSnapTypes.Quadrants">
      <summary> Snaps to quadrant points. For arcs, jump snaps are enabled. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectSnapTypes.Tangents">
      <summary> Snaps tangent to an arc. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectSnapTypes.Perpendicular">
      <summary> Snaps to perpendicular elements or components. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectSnapTypes.Centers">
      <summary> Snaps to the center of an arc. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectSnapTypes.Intersections">
      <summary> Snaps to intersections. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectSnapTypes.WorkPlaneGrid">
      <summary> Snaps to a work plane grid. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectSnapTypes.Nearest">
      <summary> Snaps to the nearest element or component. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectSnapTypes.Midpoints">
      <summary> Snaps to the midpoint of an element or component. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectSnapTypes.Endpoints">
      <summary> Snaps to the endpoint of an element or component. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectSnapTypes.None">
      <summary> Snaps to nothing. </summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Selection.ObjectType">
      <summary>This enumerated type contains object types allowed to be selected during selection operations.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectType.Face">
      <summary> Any face. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectType.Edge">
      <summary> Any model edge. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectType.PointOnElement">
      <summary> Any point on an element (on a face or curve). </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectType.Element">
      <summary> Whole element. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Selection.ObjectType.Nothing">
      <summary> Nothing. </summary>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.ISelectionFilter.AllowReference(Autodesk.Revit.DB.Reference,Autodesk.Revit.DB.XYZ)">
      <summary>Override this post-filter method to specify if a reference to a piece of geometry is permitted to be selected.</summary>
      <returns>Return true to allow the user to select this candidate reference. Return false to prevent selection of this candidate.</returns>
      <param name="reference">A candidate reference in selection operation.</param>
      <param name="position">The 3D position of the mouse on the candidate reference.</param>
      <remarks>If an exception is thrown from this method, the element will not be permitted to be selected.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.ISelectionFilter.AllowElement(Autodesk.Revit.DB.Element)">
      <summary>Override this pre-filter method to specify if the element should be permitted to be selected.</summary>
      <returns>Return true to allow the user to select this candidate element. Return false to prevent selection of this element.</returns>
      <param name="elem">A candidate element in selection operation.</param>
      <remarks>If an exception is thrown from this method, the element will not be permitted to be selected.</remarks>
    </member>
    <member name="T:Autodesk.Revit.UI.Selection.ISelectionFilter">
      <summary>An interface that provides the ability to filter objects during a selection operation.</summary>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\AnalysisVisualization.cs" region="Autodesk.Revit.UI.Selection.ISelectionFilter" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\AnalysisVisualization.vb" region="Autodesk.Revit.UI.Selection.ISelectionFilter" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.SelElementSet.Create">
      <summary>Creates a new instance of a set specifically for holding selected elements.</summary>
      <returns>Returns a new Element Set.</returns>
      <remarks>If the user wants to change the selected Element with the API, the instance SelElementSet
must be created to do the operation of Add and Remove. </remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.SelElementSet.Erase(Autodesk.Revit.DB.Element)">
      <summary>Remove an element from the selected element set.</summary>
      <param name="element">The element to be removed.</param>
      <returns>Returns count of the elements to be erased from the selected element set.</returns>
      <remarks>This function will do same task as Remove.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.SelElementSet.Clear">
      <summary>Clear the selected element set.</summary>
      <remarks>All the elements in the selected element set will be removed and no element will be highlighted
after the operation.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.SelElementSet.Remove(Autodesk.Revit.DB.Element)">
      <summary>Remove an element from the selected element set.</summary>
      <param name="element">The element to be removed.</param>
      <remarks>This function will remove the specified from the selected element set, just like de-select it
from the UI.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.Selection.SelElementSet.Add(Autodesk.Revit.DB.Element)">
      <summary>Add an element into the selected element set.</summary>
      <param name="element">The element to be added.</param>
      <remarks>This function will add the specified element to the selected element set, just like the element
is picked from the UI.</remarks>
    </member>
    <member name="T:Autodesk.Revit.UI.Selection.SelElementSet">
      <summary>This class contains the current user selection of elements within the project.</summary>
      <remarks>Add or Remove elements from the selected element set. The elements in the set will be highlighted
as selected elements in the UI.</remarks>
    </member>
    <member name="M:XYZ.#ctor(XYZInitGarbage)">
XYZ(XYZ_Garbage) will do nothing. 
I.e, this will create an object with unitialized data members.
Use this if you are going to initialize via other means
(e.g., via a stupid getter) and performance is critical.
</member>
    <member name="M:XYZ.#ctor">
literal constructors. expect heavy optimization.
</member>
    <member name="T:XYZ">

A self-initializing 3d point/vector class.

Notes:
This is intended to be a drop-in replacement for Vec3d.  This means transparent operations with
Vec3d, AKA double*, methods.  This means the compiler may not catch some type errors.

We do, yes, we do return by value because the worst that can happen is gratuitous copying of 24
bytes, and we can live with it. In general, we let the compiler figure out the temporary
storage and optimize inlines.

</member>
    <member name="M:Autodesk.Revit.UI.ToggleButtonData.#ctor(System.String,System.String)">
      <summary>Constructs a new instance of ToggleButtonData, where the ToggleButton will not be associated to an ExternalCommand.</summary>
      <param name="name">The internal name of the new button.</param>
      <param name="text">The user visible text seen on the new button. </param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when <see langword="null" /> is passed for one or more arguments.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an empty string is passed for one or more arguments.</exception>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.ToggleButtonData.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Constructs a new instance of ToggleButtonData, where the ToggleButton will execute an ExternalCommand when clicked.</summary>
      <param name="name">The internal name of the new button.</param>
      <param name="text">The user visible text seen on the new button. </param>
      <param name="assemblyName">The assembly path of the button.</param>
      <param name="className">The name of the class containing the implementation for the command. </param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when <see langword="null" /> is passed for one or more arguments.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an empty string is passed for one or more arguments.</exception>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.ToggleButtonData">
      <summary>This class contains information necessary to construct a toggle button in a RadioButtonGroup.</summary>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.ToggleButton">
      <summary>The ToggleButton object represents a button that has been added to a RadioButtonGroup.</summary>
      <remarks>Use of this class is not supported in Revit VSTA.</remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.ExternalCommandData.JournalData">
      <summary>A data map that can be used to read and write data to the Autodesk Revit journal file.</summary>
      <remarks>The data map is a string to string map that can be used to store data in the Revit journal
file at the end of execution of the external command. If the command is then executed from the journal
file during playback this data is then passed to the external command in this Data property so the
external command can execute with this passed data in a UI-less mode, hence providing non interactive
journal playback for automated testing purposes. For more information on Revit's journaling features
contact the Autodesk Developer Network.</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.ExternalCommandData.Data">
      <summary>A data map that can be used to read and write data to the Autodesk Revit journal file.</summary>
      <remarks>The data map is a string to string map that can be used to store data in the Revit journal
file at the end of execution of the external command. If the command is then executed from the journal
file during playback this data is then passed to the external command in this Data property so the
external command can execute with this passed data in a UI-less mode, hence providing non interactive
journal playback for automated testing purposes. For more information on Revit's journaling features
contact the Autodesk Developer Network.</remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\ExternalCommandData_Data.cs" region="Autodesk.Revit.UI.ExternalCommandData.Data" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\ExternalCommandData_Data.vb" region="Autodesk.Revit.UI.ExternalCommandData.Data" />
      </example>
    </member>
    <member name="P:Autodesk.Revit.UI.ExternalCommandData.View">
      <summary> Retrieves an object that represents the View external command work on. </summary>
    </member>
    <member name="P:Autodesk.Revit.UI.ExternalCommandData.Application">
      <summary> Retrieves an object that represents the current Application for 
external command. </summary>
    </member>
    <member name="T:Autodesk.Revit.UI.ExternalCommandData">
      <summary> A class contains reference to Application and View which are needed by external command. </summary>
    </member>
    <member name="M:Autodesk.Revit.UI.SplitButtonData.#ctor(System.String,System.String)">
      <summary>Constructs a new instance of SplitButtonData.</summary>
      <param name="name">The internal name of the new button.</param>
      <param text="text">The user visible text seen on the new button. </param>
      <remarks>
This text will be displayed on the button if drop-down is empty. If sub-items are added, 
then the split button will display the current PushButton's text.
</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when <see langword="null" /> is passed for one or more arguments.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an empty string is passed for one or more arguments.</exception>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.SplitButtonData">
      <summary>This class contains information necessary to construct a split button in the Ribbon.</summary>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.SplitButton.CurrentButton">
      <summary>Gets or sets the current PushButton of the SplitButton.</summary>
      <remarks>This property is applicable only if IsSynchronizedWithCurrentItem is true.
The default value of this property will be the first enabled PushButton in the drop down list after the SplitButton is shown.             
</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when trying to set the CurrentButton to <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when trying to set the CurrentButton to a button which is not in current drop-down list.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when trying to set the CurrentButton if IsSynchronizedWithCurrentItem is false.</exception>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.SplitButton.IsSynchronizedWithCurrentItem">
      <summary>
Indicates whether the top PushButton on the SplitButton changes based on the CurrentButton property.
</summary>
      <remarks>
If this property is true the SplitButton uses the current PushButton's properties to display the image, text, tooltip, 
etc. and executes the current item when clicked. If it is false the first listed PushButton in the GetItems() return is shown, 
and executes this PushButton when clicked. 
If it is false the items in drop down list can only be executed by opening the drop down list and clicking an item in the list.
The default value is true.
</remarks>
      <since>2011</since>
    </member>
    <member name="T:Autodesk.Revit.UI.SplitButton">
      <summary>The SplitButton object represents a button with a clickable button appearing above a pulldown. </summary>
      <remarks>Use of this class is not supported in Revit VSTA.</remarks>
      <since>2011</since>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\RibbonPanel.cs" region="Autodesk.Revit.UI.SplitButton" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\RibbonPanel.vb" region="Autodesk.Revit.UI.SplitButton" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.UI.PulldownButtonData.#ctor(System.String,System.String)">
      <summary>Constructs a new instance of PulldownButtonData.</summary>
      <param name="name">The internal name of the new button.</param>
      <param text="text">The user visible text seen on the new button. </param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when <see langword="null" /> is passed for one or more arguments.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an empty string is passed for one or more arguments.</exception>
    </member>
    <member name="T:Autodesk.Revit.UI.PulldownButtonData">
      <summary>This class contains information necessary to construct a pulldown button in the Ribbon.</summary>
    </member>
    <member name="M:Autodesk.Revit.UI.PulldownButton.AddSeparator">
      <summary>Adds a separator to the drop-down list.</summary>
      <remarks>The separator will appear just below the last added PushButton. </remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.PulldownButton.AddPushButton(Autodesk.Revit.UI.PushButtonData)">
      <summary>Adds a new pushbutton to the pulldown button and associates it with an ExternalCommand. </summary>
      <param name="buttonData">An object containing the data needed to construct the pushbutton.  </param>
      <remarks> The new button will display its large image if PushButton.LargeImage is set. </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when buttonData is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException"> 
Thrown when button with buttonData.Name already exists in the button.
</exception>
      <returns> The newly added pushbutton. </returns>
    </member>
    <member name="M:Autodesk.Revit.UI.PulldownButton.GetItems">
      <summary>Gets a copy of the collection of buttons assigned to the pulldown button.</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.PulldownButton">
      <summary>The PulldownButton object represents a button with a drop-down list on RibbonPanel.</summary>
      <remarks>Use of this class is not supported in Revit VSTA.</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.PushButtonData.AvailabilityClassName">
      <summary>The full class name for the class providing the entry point to decide availability of this push button. </summary>
      <remarks>This is the class implementing IExternalCommandAvailability interface. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.PushButtonData.AssemblyName">
      <summary>The assembly path of the button.</summary>
      <remarks>The path of the assembly which contains the corresponding external command.</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when setting the value to <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when setting the value to an empty string.</exception>
    </member>
    <member name="P:Autodesk.Revit.UI.PushButtonData.ClassName">
      <summary>The name of the class containing the implementation for the command. </summary>
      <remarks>The class name which implements the interface IExternalCommand. </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when setting the value to <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when setting the value to an empty string.</exception>
    </member>
    <member name="M:Autodesk.Revit.UI.PushButtonData.#ctor(System.String,System.String,System.String,System.String)">
      <summary>Constructs a new instance of PushButtonData.</summary>
      <param name="name">The internal name of the new button.</param>
      <param name="text">The user visible text seen on the new button. </param>
      <param name="assemblyName">The assembly path of the button.</param>
      <param name="className">The name of the class containing the implementation for the command. </param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when <see langword="null" /> is passed for one or more arguments.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an empty string is passed for one or more arguments.</exception>
    </member>
    <member name="T:Autodesk.Revit.UI.PushButtonData">
      <summary>This class contains information necessary to construct a push button in the Ribbon.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.ButtonData.Image">
      <summary>The image of the button.</summary>
      <remarks>The image will be shown on the button if it is a part of a stacked set, or if it is promoted to the 
Quick Access Toolbar. The best size is 16 x 16 pixels; if larger, the image will NOT be adjusted to fit the 
toolbar button.</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.ButtonData.LargeImage">
      <summary>The large image of the button.</summary>
      <remarks>The image will be shown on the button in the Ribbon panel if the button is not a part of a stacked set.  
It will also be shown on a push button added to a pulldown button. The best size is 32 x 32 pixels; if larger, 
the image will be adjusted to fit the button.</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.ButtonData.Text">
      <summary>The user-visible text of the button.</summary>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when setting the value to <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when setting the value to an empty string, 
or when the value contains invalid characters.</exception>
    </member>
    <member name="T:Autodesk.Revit.UI.ButtonData">
      <summary>Base class used to contain information necessary to construct a button in the Ribbon.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.PushButton.isInPulldown">
      <summary>Indicates whether the PushButton is in the drop-down list of a PulldownButton.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.PushButton.AvailabilityClassName">
      <summary>The full class name for the class providing the entry point to decide availability of this push button. </summary>
      <remarks>This is the class implementing IExternalCommandAvailability interface. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.PushButton.ClassName">
      <summary>The name of the class containing the implementation for the command. </summary>
      <remarks>The class name which implements the interface IExternalCommand. </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when setting the value to <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when setting the value to an empty string.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when setting the value to a ToggleButton which is not initialized with an external command.</exception>
    </member>
    <member name="P:Autodesk.Revit.UI.PushButton.AssemblyName">
      <summary>The assembly path of the button.</summary>
      <remarks>The path of the assembly which contains the corresponding external command.</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when setting the value to <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when setting the value to an empty string.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when setting the value to a ToggleButton which is not initialized with an external command.</exception>
    </member>
    <member name="T:Autodesk.Revit.UI.PushButton">
      <summary>The PushButton object represents an button on a RibbonPanel. </summary>
      <remarks>Use of this class is not supported in Revit VSTA.</remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\RibbonPanel.cs" region="Autodesk.Revit.UI.PushButton" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\RibbonPanel.vb" region="Autodesk.Revit.UI.PushButton" />
      </example>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonButton.Image">
      <summary>The image of the button.</summary>
      <remarks>The image will be shown on the button if it is a part of a stacked set or if it is promoted to the 
Quick Access Toolbar. The image should be 16 x 16 pixels. If the image is larger it will NOT be adjusted to fit the 
button.</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonButton.LargeImage">
      <summary>The large image shown on the button.</summary>
      <remarks>The image will be shown on the button in the Ribbon panel if the button is not a part of a stacked set.  
It will also be shown if the button is added to a pulldown button. The image should be 32 x 32 pixels. If the image is larger
it will be adjusted to fit the button.</remarks>
    </member>
    <member name="T:Autodesk.Revit.UI.RibbonButton">
      <summary>This class is the base class of PushButton and PulldownButton. </summary>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItemData.ToolTipImage">
      <summary>The image to show as a part of the button extended tooltip </summary>
      <remarks> Shown when the cursor hovers over the command. 
If neither this property nor LongDescription is supplied, the button will not have 
an extended tooltip. Maximum height or width is 355 pixels.
SplitButton and RadioButtonGroup cannot display the tooltip set by this method. SplitButton
shows the current PushButton tooltip and RadioButtonGroup has no tooltip.</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItemData.LongDescription">
      <summary> Long description of the command tooltip </summary>
      <remarks> It will be used as part of the button's extended 
tooltip. This tooltip is shown when the mouse hovers over the command for a long amount 
of time. You can split the text of this option into multiple paragraphs by placing &lt;p&gt; 
tags around each paragraph. Optional. If neither of this property and TooltipImage is 
supplied, the button will not have an extended tooltip. 
SplitButton and RadioButtonGroup cannot display the tooltip set by this method, the SplitButton will
always show the current PushButton tooltip, and RadioButtonGroup has no tooltip.</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItemData.ToolTip">
      <summary>The description that appears as a ToolTip for the item.</summary>
      <remarks>The text that is displayed when the mouse pointer moves over the item. 
SplitButton and RadioButtonGroup cannot display the tooltip set by this method, the SplitButton will
always show the current PushButton tooltip, and RadioButtonGroup has no tooltip.</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItemData.Name">
      <summary>The name of the item.</summary>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when setting the value to <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when setting the value to an empty string.</exception>
    </member>
    <member name="T:Autodesk.Revit.UI.RibbonItemData">
      <summary>Base class used to contain information necessary to construct a RibbonItem in the Ribbon.</summary>
    </member>
    <member name="M:Autodesk.Revit.UI.RibbonItem.Equals(System.Object)">
      <summary> Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.  </summary>
      <param name="obj"> Another panel object. </param>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItem.ItemType">
      <summary>Gets the item type.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItem.Visible">
      <summary>Gets or sets a value indicating whether the item is visible. </summary>
      <remarks>When the Visible property is set to false, the item won't be displayed on Ribbon. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItem.Enabled">
      <summary>Gets or sets a value indicating whether the item is enabled. </summary>
      <remarks>When the Enabled property is set to false, the item cannot be clicked, 
and the item's appearance changes. The Image and Text assigned to the item appear grayed
out. If the relevant external command cannot be executed, setting Enabled to true won't have an effect. 
The push button will be disabled when there is no active document unless availability class of that button returns true. </remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItem.ToolTipImage">
      <summary>The image to show as a part of the button extended tooltip </summary>
      <remarks> Shown when the cursor hovers over the command. 
If neither this property nor LongDescription is supplied, the button will not have 
an extended tooltip. Maximum height or width is 355 pixels.
SplitButton and RadioButtonGroup cannot display the tooltip set by this method. SplitButton
shows the current PushButton tooltip and RadioButtonGroup has no tooltip.</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItem.LongDescription">
      <summary> Long description of the command tooltip </summary>
      <remarks> It will be used as part of the button's extended 
tooltip. This tooltip is shown when the mouse hovers over the command for a long amount 
of time. You can split the text of this option into multiple paragraphs by placing &lt;p&gt; 
tags around each paragraph. Optional. If neither of this property and TooltipImage is 
supplied, the button will not have an extended tooltip. 
SplitButton and RadioButtonGroup cannot display the tooltip set by this method, the SplitButton will
always show the current PushButton tooltip, and RadioButtonGroup has no tooltip.</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItem.ToolTip">
      <summary>The description that appears as a ToolTip for the item.</summary>
      <remarks>The text that is displayed when the mouse pointer moves over the item. 
SplitButton and RadioButtonGroup cannot display the tooltip set by this method, the SplitButton will
always show the current PushButton tooltip, and RadioButtonGroup has no tooltip.</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItem.ItemText">
      <summary>Gets or sets the text displayed on the item. </summary>
      <remarks>The text can be changed at run time. <see langword="null" /> or empty string is not allowed. 
</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException"> Thrown when setting the text to empty or to the string contains "%". </exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException"> Thrown when setting the text to <see langword="null" />. </exception>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonItem.Name">
      <summary>The name of the item.</summary>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException"> Thrown when setting the text to empty or to the string contains "%". </exception>
    </member>
    <member name="T:Autodesk.Revit.UI.RibbonItem">
      <summary>The RibbonItem object represents an item on RibbonPanel, can be a push-button or a pull-down 
which should contain the information for creating one RibbonItem.</summary>
      <remarks>This class is not supported in Revit VSTA.</remarks>
    </member>
    <member name="T:Autodesk.Revit.UI.RibbonItemType">
      <summary>An enumerated type listing all the toolbar item styles. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.RibbonItemType.TextBox">
      <summary>A text-based control that allows the user to enter text. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.RibbonItemType.ComboBox">
      <summary>A selection control with a drop-down list that can be shown or hidden by clicking the arrow on the control. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.RibbonItemType.ComboBoxMember">
      <summary>An item in the drop-down list of a ComboBox. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.RibbonItemType.RadioButtonGroup">
      <summary>An item that contains a collection of RibbonToggleButton items. </summary>
    </member>
    <member name="F:Autodesk.Revit.UI.RibbonItemType.ToggleButton">
      <summary>A standard button that can be added to RadioButtonGroup.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.RibbonItemType.SplitButton">
      <summary>A split button with a default button and a pull-down menu list.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.RibbonItemType.PulldownButton">
      <summary>A button with a pull-down menu list.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.RibbonItemType.PushButton">
      <summary>A standard button with text and image.</summary>
    </member>
    <member name="M:UIObjectFactoryUtils.#ctor">
      <summary>For Internal Use Only.</summary>
      <remarks>This constructor is exposed to enable support for COM interop only. This object should never
be created by the developer.</remarks>
    </member>
    <member name="T:UIObjectFactoryUtils">
      <summary>Provides access to the ImportInstance in Autodesk Revit.</summary>
      <remarks>The Import Instance object can be generated by Import operation.</remarks>
    </member>
    <member name="T:Autodesk.Revit.UI.AvailabilityCommands">
      <summary> Store all the ObjectHandlers to the availability command. </summary>
      <remarks> In order to enhance the performance, we just create ObjectHandler for each availability command only once. </remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.IExternalCommandAvailability.IsCommandAvailable(Autodesk.Revit.UI.UIApplication,Autodesk.Revit.DB.CategorySet)">
      <summary> Implement this method to provide control over whether your external command is enabled or disabled. </summary>
      <returns> Indicates whether Revit should enable or disable the corresponding external command. </returns>
      <param name="applicationData"> An ApplicationServices.Application object which contains reference to Application
needed by external command. </param>
      <param name="selectedCategories"> An list of categories of the elements which have been selected in Revit in the active document, 
or an empty set if no elements are selected or there is no active document. </param>
    </member>
    <member name="T:Autodesk.Revit.UI.IExternalCommandAvailability">
      <summary>An interface that should be implemented to provide the implementation for a accessibility check for a Revit add-in External Command.</summary>
      <remarks>This interface should share the same assembly with add-in External Command.</remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\IExternalCommand.cs" region="Autodesk.Revit.UI.IExternalCommandAvailability" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\IExternalCommand.vb" region="Autodesk.Revit.UI.IExternalCommandAvailability" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.UI.IExternalCommand.Execute(Autodesk.Revit.UI.ExternalCommandData,System.String@,Autodesk.Revit.DB.ElementSet)">
      <summary>Overload this method to implement and external command within Revit.</summary>
      <returns> The result indicates if the execution fails, succeeds, or was canceled by user. If it does not
succeed, Revit will undo any changes made by the external command. </returns>
      <param name="commandData"> An ExternalCommandData object which contains reference to Application and View
needed by external command.</param>
      <param name="message"> Error message can be returned by external command. This will be displayed only if the command status
was "Failed".  There is a limit of 1023 characters for this message; strings longer than this will be truncated.</param>
      <param name="elements"> Element set indicating problem elements to display in the failure dialog.  This will be used
only if the command status was "Failed".</param>
    </member>
    <member name="T:Autodesk.Revit.UI.IExternalCommand">
      <summary>An interface that should be implemented to provide the implementation for a Revit add-in External Command.</summary>
      <remarks>To add an external command to Autodesk Revit the developer should implement an object
that supports the IExternalCommand interface.</remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\IExternalCommand.cs" region="Autodesk.Revit.UI.IExternalCommand" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\IExternalCommand.vb" region="Autodesk.Revit.UI.IExternalCommand" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.UI.IExternalApplication.OnShutdown(Autodesk.Revit.UI.UIControlledApplication)">
      <summary>Implement this method to execute some tasks when Autodesk Revit shuts down.</summary>
      <param name="application">A handle to the application being shut down.</param>
      <returns>Indicates if the external application completes its work successfully.</returns>
    </member>
    <member name="M:Autodesk.Revit.UI.IExternalApplication.OnStartup(Autodesk.Revit.UI.UIControlledApplication)">
      <summary>Implement this method to execute some tasks when Autodesk Revit starts.</summary>
      <param name="application">A handle to the application being started.</param>
      <returns>Indicates if the external application completes its work successfully.</returns>
    </member>
    <member name="T:Autodesk.Revit.UI.IExternalApplication">
      <summary>An interface that supports addition of external applications to Revit.</summary>
      <remarks>External applications are permitted to customize the Revit UI, and to add events 
and updaters to the session.</remarks>
    </member>
    <member name="T:Autodesk.Revit.UI.Result">
      <summary>Informs Autodesk Revit of the status of your application after execution.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Result.Cancelled">
      <summary>Signifies that the external application is cancelled.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Result.Succeeded">
      <summary>The external application completed successfully. Autodesk Revit will keep this object
during the entire Revit session.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Result.Failed">
      <summary>The external application was unable to complete its task.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.ControlledApplication">
      <summary>Returns the database level ControlledApplication represented by this UI-level ControlledApplication.</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.UIControlledApplication">
      <summary>Represents the Autodesk Revit user interface, providing access to
UI customization methods and events.</summary>
      <remarks>This class does not provide access to documents because it is provided to you through the ExternalApplication
OnStartup()/OnShutdown() methods, and those methods are when it is not possible to work with Revit documents.  
You can work with documents by getting them from the UIApplication class; that class is obtained from events and 
ExternalCommand callbacks.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIApplication.#ctor(Autodesk.Revit.ApplicationServices.Application)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="P:Autodesk.Revit.UI.UIApplication.ActiveAddInId">
      <summary> Get current active external application or external command id. </summary>
    </member>
    <member name="P:Autodesk.Revit.UI.UIApplication.LoadedApplications">
      <summary> Returns an array of successfully loaded external applications. </summary>
      <remarks> This property can be used by your application to find all successfully
loaded external applications when Revit starts.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIApplication.GetRibbonPanels(System.String)">
      <summary> Get all the custom Panels on a designated Revit tab.</summary>
      <param name="tabName">The name of the tab on which the panels are located.</param>
      <remarks> Built-in panels will not be included. tabName must be the name of one of the tabs added 
by <see cref="M:Autodesk.Revit.UI.UIApplication.CreateRibbonTab(System.String)" />. 
This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIApplication.GetRibbonPanels(Autodesk.Revit.UI.Tab)">
      <summary> Get all the custom Panels on a designated standard Revit tab.</summary>
      <param name="tab">The tab on which the panels are located.</param>
      <remarks> Built-in panels will not be included. This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIApplication.GetRibbonPanels">
      <summary> Get all the custom Panels on Add-Ins tab of Revit.</summary>
      <remarks> The built-in panels won't be included and the panels added to tabs other than Add-Ins will not be included. 
This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIApplication.CreateRibbonPanel(Autodesk.Revit.UI.Tab,System.String)">
      <summary> Create a new RibbonPanel on the designated standard Revit tab. </summary>
      <param name="tab">The target tab, on which the new panel will be created.</param>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">panelName is Empty or the tab is not valid.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">If more than 100 panels were created or the tab cannot be found. </exception>
      <remarks> This method will create a custom panel appending to the specified tab. This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIApplication.CreateRibbonPanel(System.String)">
      <summary> Create a new RibbonPanel on the Add-Ins tab. </summary>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">panelName is Empty.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">If more than 100 panels were created. </exception>
      <remarks> This method will create a custom panel appending to the Revit AddIns tab. This method is not supported in VSTA. </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\CreateRibbonPanel.cs" region="Autodesk.Revit.UI.UIApplication.CreateRibbonPanel(string)" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\CreateRibbonPanel.vb" region="Autodesk.Revit.UI.UIApplication.CreateRibbonPanel(string)" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.UI.UIApplication.CreateRibbonPanel(System.String,System.String)">
      <summary> Create a new RibbonPanel on the specified tab. </summary>
      <param name="tabName">The name of the tab, on which the new panel will be created.</param>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">tabName or panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">tabName or panelName is Empty.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Too many panels have been added to this tab (Maximum is 100).</exception>
      <remarks> This method will create a custom panel appending to the specified tab. This method is not supported in VSTA. </remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIApplication.CreateRibbonTab(System.String)">
      <summary> Creates a new tab on the Revit user interface. </summary>
      <param name="tabName">The name of the tab to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">tabName or panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">tabName or panelName is Empty or the tab name duplicates the name of another tab in the Revit UI.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Too many custom tabs have been created in this session. (Maximum is 20).</exception>
      <remarks> This method will create a custom tab at the end of the list of static tabs. If multiple tabs are added, they will be shown in the order added. This method is not supported in VSTA. </remarks>
    </member>
    <member name="E:Autodesk.Revit.UI.UIApplication.Idling">
      <summary>
Subscribe to the Idling event to be notified when Revit is not in an active tool or transaction.
</summary>
      <remarks>
        <para>This event is raised when it is safe for the API application to access the active 
 document between user interactions. The event is raised only when the Revit UI is 
 in a state where the user could successfully click on an API command button.</para>
        <para>
Handlers of this event are permitted to make modifications to any document (including the active document),
except for documents that are currently in read-only mode.
</para>
        <para>In order to change a document, you must begin a new transaction for that document.  
 This transaction will appear in the Revit undo stack and may be undone by the Revit user.</para>
        <para>This event is invoked between user actions in the Revit UI. If the handler for 
 this event requires a significant amount of processing time, users will perceive a slowdown 
 in the responsiveness of Revit. If the execution for updates can be safely split across 
 multiple calls to this event, the user perception of Revit responsiveness will be improved. </para>
        <para>Event is not cancellable. </para>
      </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit_Events\Events.cs" region="Autodesk.Revit.UI.UIApplication.Idling" />
      </example>
    </member>
    <member name="E:Autodesk.Revit.UI.UIApplication.DialogBoxShowing">
      <summary>   
Subscribe to the DialogBoxShowing event to be notified when Revit is just about to show a dialog box or a message box.
</summary>
      <remarks>
        <para>This event is raised when Revit is just about to show a dialog box or a message box.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.</para>
        <para>Depending on the type of the dialog that is being shown, the event's argument's type varies as follows:
When it is a dialog box, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.DialogBoxShowingEventArgs" />.
When it is a message box, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.MessageBoxShowingEventArgs" />,which is subclass of DialogBoxShowingEventArgs.
When it is a task dialog, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.TaskDialogShowingEventArgs" />,which is subclass of DialogBoxShowingEventArgs.</para>
        <para>No document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
      </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit_Events\DialogBoxShowing.cs" region="Autodesk.Revit.UI.UIApplication.DialogBoxShowing" />
      </example>
    </member>
    <member name="E:Autodesk.Revit.UI.UIApplication.ApplicationClosing">
      <summary>
Subscribe to the ApplicationClosing event to be notified when the Revit application is just about to be closed.  
</summary>
      <remarks>
        <para>This event is raised when the Revit application is just about to be closed.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.</para>
        <para>No document may be modified at the time of the event.</para>
        <para>The sender object of this event is <see cref="T:Autodesk.Revit.UI.UIControlledApplication" /> object.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.UI.UIApplication.ViewActivated">
      <summary>
Subscribe to the ViewActivated event to be notified immediately after Revit has finished activating a view of a document.
</summary>
      <remarks>
        <para>This event is raised immediately after Revit has finished activating a view of the document.
It is raised even when view activating failed or was cancelled (during ViewActivating event).</para>
        <para>Check the 'Status' field in event’s argument to see whether the action itself was successful or not.</para>
        <para>This event is not cancellable, for the process of view activating has already been finished.</para>
        <para>The document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.UI.UIApplication.ViewActivating">
      <summary>
Subscribe to the ViewActivating event to be notified when Revit is just about to activate a view of a document. 
</summary>
      <remarks>
        <para>This event is raised when Revit is just about to activate a view of the document.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.
Your application is responsible for providing feedback to the user about the reason for the cancellation.</para>
        <para>The document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
        <para>Another <see cref="E:Autodesk.Revit.UI.UIApplication.ViewActivated" /> event will be raised immediately after view activating 
is finished.</para>
      </remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIApplication.OpenAndActivateDocument(System.String)">
      <summary>
  Opens and activates a Revit document.
</summary>
      <remarks>
   This method, if successful, changes the active document.
   It is not allowed to have an open transaction in the active document when calling this method.
   Consequently, this method can only be used in manual transaction mode, not in automatic mode.
   Additionally, this method may not be called from inside an event handler.
</remarks>
      <param name="fileName">
   A full path to a revit file to be opened.
   The file can be either a Revit project, template, of family document.
</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">
   If <see langword="null" /> is passed as 'fileName'.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.FileArgumentNotFoundException">
   The file specified by 'fileName' cannot be found.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">
   The given 'fileName' is not a Revit file (a project, template, or family document).
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
        <ul>
          <li>If the active document is currently modifiable.</li>
          <li>If an API event handler is currently being executed.</li>
        </ul>
      </exception>
      <since>
   2012
</since>
    </member>
    <member name="P:Autodesk.Revit.UI.UIApplication.DrawingAreaExtents">
      <summary>Get the rectangle that represents the screen pixel coordinates of drawing area. </summary>
      <remarks>The drawing area of the Revit window displays views (and sheets and schedules) of the current project. 
The size of drawing area restricts the max size of the view windows.
If there is no project opened, null will be returned. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.UIApplication.MainWindowExtents">
      <summary>Get the rectangle that represents the screen pixel coordinates of Revit main window. </summary>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.UIApplication.ActiveUIDocument">
      <summary>Provides access to an object that represents the currently active project.</summary>
      <remarks>External API commands can access this property in read-only mode only!
The ability to modify the property is reserved for future implementations.</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when attempting to modify the property.</exception>
    </member>
    <member name="P:Autodesk.Revit.UI.UIApplication.Application">
      <summary>Returns the database level Application represented by this UI level Application.</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.UIApplication">
      <summary>Represents an active session of the Autodesk Revit user interface, providing access to
UI customization methods, events, and the active document.</summary>
      <remarks>You can access documents from the database level Application object, obtained from
the Application property.  If you have an instance of the database level Application object, 
you can construct a UIApplication from it.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.RibbonPanel.Equals(System.Object)">
      <summary> Determines whether the specified <see cref="T:System.Object" /> is equal to the current <see cref="T:System.Object" />.  </summary>
      <param name="obj"> Another panel object. </param>
    </member>
    <member name="M:Autodesk.Revit.UI.RibbonPanel.AddSlideOut">
      <summary> Adds a slideout to the current panel. </summary>
      <remarks> The slideout part of the panel can be shown by clicking on the arrow at the bottom of the panel.
After calling AddSlideOut(), any subsequent calls to add new items will add the new item(s) to the slideout.
The slideout part of the panel will be shown only if items are added after this call.
</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when a slide out panel is already added. </exception>
      <since>2011</since>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\RibbonPanel.cs" region="Autodesk.Revit.UI.RibbonPanel.AddSlideOut()" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\RibbonPanel.vb" region="Autodesk.Revit.UI.RibbonPanel.AddSlideOut()" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.UI.RibbonPanel.AddStackedItems(Autodesk.Revit.UI.RibbonItemData,Autodesk.Revit.UI.RibbonItemData,Autodesk.Revit.UI.RibbonItemData)">
      <summary> Adds three stacked items to the panel. </summary>
      <param name="item1"> Data containing information about the first item. This data must be of type PushButtonData, PulldownButtonData, ComboBoxData, or TextBoxData.</param>
      <param name="item2"> Data containing information about the second item. This data must be of type PushButtonData, PulldownButtonData, ComboBoxData, or TextBoxData.</param>
      <param name="item3"> Data containing information about the third item. This data must be of type PushButtonData, PulldownButtonData, ComboBoxData, or TextBoxData.</param>
      <returns> A collection containing the added items. </returns>
      <remarks> Each new item may either be a PushButton, PulldownButton, ComboBox or TextBox, depending upon the type of 
data passed in for each argument. The new items will be created as small-size horizontal controls, 
with the first stacked on top of the second in the panel. </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when item1, item2 or item3 is <see langword="null" />. </exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an item with item1.Name or item2.Name or item3.Name already exists in the panel or the data is not of the correct type. </exception>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.RibbonPanel.AddStackedItems(Autodesk.Revit.UI.RibbonItemData,Autodesk.Revit.UI.RibbonItemData)">
      <summary> Adds two stacked items to the panel. </summary>
      <param name="item1"> Data containing information about the first item. This data must be of type PushButtonData, PulldownButtonData, ComboBoxData, or TextBoxData.</param>
      <param name="item2"> Data containing information about the second item. This data must be of type PushButtonData, PulldownButtonData, ComboBoxData, or TextBoxData.</param>
      <returns> A collection containing the added items. </returns>
      <remarks> Each new item may either be a PushButton, PulldownButton, ComboBox or TextBox, depending upon the type of 
data passed in for each argument. The new items will be created as small-size horizontal controls, 
with the first stacked on top of the second in the panel. </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when item1 or item2 is <see langword="null" />. </exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an item with the item1.Name or item2.Name already exists in the panel or the data is not of the correct type. </exception>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.RibbonPanel.AddItem(Autodesk.Revit.UI.RibbonItemData)">
      <summary> Adds a Ribbon item to the panel. </summary>
      <param name="itemData"> Data containing information about the new item. </param>
      <returns> The added Ribbon item. </returns>
      <remarks> The new item may either be a PushButton, PulldownButton, SplitButon, RadioButtonGroup, ComboBox, or TextBox depending upon the type of data passed in.
The new item may be created as a large-size vertical control in the panel.</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">Thrown when itemData is <see langword="null" />. </exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when an item with the itemData.Name already exists in the panel or the data is not of the correct type. </exception>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.RibbonPanel.AddSeparator">
      <summary>Adds a new Separator to the panel.</summary>
      <remarks>The separator won't be shown if there are no items already added to the panel.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.RibbonPanel.GetItems">
      <summary>Gets a copy of the collection of RibbonItems assigned to the RibbonPanel.</summary>
      <remarks>This method gets the items assigned to the RibbonPanel. </remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonPanel.Enabled">
      <summary>Gets or sets a value indicating whether the RibbonPanel can respond to user interaction.</summary>
      <value>True if the panel allows interaction, false if the panel disallows interaction with all the controls it contains.</value>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonPanel.Visible">
      <summary>Gets or sets a value indicating whether the RibbonPanel is displayed.</summary>
      <value>True if the RibbonPanel is displayed; otherwise, false. The default is true.</value>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonPanel.Title">
      <summary>Gets or sets the text of the RibbonPanel.</summary>
      <remarks>If this property is not set, the default value is its Name.</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">Thrown when the title contains angle bracket.</exception>
    </member>
    <member name="P:Autodesk.Revit.UI.RibbonPanel.Name">
      <summary>Gets or sets the name of the RibbonPanel.</summary>
      <remarks>The name will be displayed on the panel if the Text is not set.</remarks>
    </member>
    <member name="T:Autodesk.Revit.UI.RibbonPanel">
      <summary>Represents a panel added by an External Application or External Command into the Add-Ins tab. </summary>
      <remarks>The Panel class provides read and write access to the RibbonItems contained in the panel. Use of this class is not supported in Revit VSTA.</remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\RibbonPanel.cs" region="Autodesk.Revit.UI.RibbonPanel" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\RibbonPanel.vb" region="Autodesk.Revit.UI.RibbonPanel" />
      </example>
    </member>
    <member name="T:Autodesk.Revit.UI.Tab">
      <summary>An enumerated type listing static tabs which support addition of panels via the API.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Tab.Analyze">
      <summary>The Analyze tab.</summary>
    </member>
    <member name="F:Autodesk.Revit.UI.Tab.AddIns">
      <summary>The Add-Ins tab.</summary>
    </member>
    <member name="M:Autodesk.Revit.UI.UIDocument.#ctor(Autodesk.Revit.DB.Document)">
      <summary> Use a database level Document to construct a UI-level Document.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.UIDocument.Application">
      <summary> Retrieves an object that represents the current Application.</summary>
    </member>
    <member name="M:Autodesk.Revit.UI.UIDocument.PromptForFamilyInstancePlacement(Autodesk.Revit.DB.FamilySymbol)">
      <summary>Prompts the user to place instances of the specified FamilySymbol.</summary>
      <param name="familySymbol">The FamilySymbol.</param>
      <remarks> This method opens its own transaction, so it's not permitted to be invoked in an active transaction.
In a single invocation, the user can place multiple instances of the input family type until they finish the 
placement (with Cancel or ESC or a click elsewhere in the UI). The user will not be permitted to change the type to be placed. 
Users are not permitted to change the active view during this placement operation (the operation will be completed).</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when 
this API method is invoked in an active transaction,
or this document is not active, 
or this is a family document and the instances of this family symbol can not exist in the current family, 
or this family symbol has no command to create instance, 
or the command to create instance is disabled in active view.</exception>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.UIDocument.Document">
      <summary>Returns the database level document represented by this UI-level document.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.UIDocument.ActiveView">
      <summary>
   The currently active view of the currently active document.
</summary>
      <since>2012</since>
      <remarks>
        <para>This property is applicable to the currently active document only.</para>
        <para>The active view can only be changed when:
   <ul><li>There is no open transaction.</li><li><see cref="P:Autodesk.Revit.DB.Document.IsModifiable" /> is false.</li><li><see cref="P:Autodesk.Revit.DB.Document.IsReadOnly" /> is false.</li><li>ViewActivating, ViewActivated, and any pre-action of events (such as DocumentSaving or DocumentClosingevents) are not being handled.</li></ul></para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">
   When setting the property: If the 'view' argument is NULL.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">
 When setting the property:
 <ul><li>If the given view is not a valid view of the document; -or-</li><li>If the given view is a template view; -or-</li><li>If the given view is an internal view.</li></ul></exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
        <para>When getting the property: If the document is not currently active.</para>
        <para>When setting the property:
   <ul><li>If the document is not currently active; -or-</li><li>If the document is currently modifiable (i.e. with an active transaction); -or-</li><li>If the document is currently in read-only state; -or-</li><li>When invoked during either ViewActivating or ViewActivated event; -or-</li><li>When invoked during any pre-action kind of event, such as DocumentSaving, DocumentClosing, etc.</li></ul></para>
      </exception>
    </member>
    <member name="M:Autodesk.Revit.UI.UIDocument.RefreshActiveView">
      <summary>Refresh the display of the active view in the active document.</summary>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.UI.UIDocument.ShowElements(System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId})">
      <summary>Shows the elements by zoom to fit.</summary>
      <param name="elementIds">The set of element ids which will be shown.</param>
      <remarks>Places all the elements on the screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIDocument.ShowElements(Autodesk.Revit.DB.ElementSet)">
      <summary>Shows the elements by zoom to fit.</summary>
      <param name="elements">The set of elements that will be shown.</param>
      <remarks>Places all the elements on the screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIDocument.ShowElements(Autodesk.Revit.DB.Element)">
      <summary>Shows the element by zoom to fit.</summary>
      <param name="element">Element that will be shown.</param>
      <remarks>Places the element in the center of screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIDocument.ShowElements(Autodesk.Revit.DB.ElementId)">
      <overloads>Shows one or more elements by zoom to fit.</overloads>
      <summary>Shows the element by zoom to fit.</summary>
      <param name="elementId">Element id that will be shown.</param>
      <remarks>Places the element in the center of screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIDocument.SaveAs">
      <summary>Saves the document to a file name obtained from the Revit user.</summary>
      <returns>False if save operation fails.
Also returns False if saving as is cancelled by an external application during 'DocumentSavingAs' event.
When function succeeds, True is returned.</returns>
      <remarks>Because the argument list is null, a SaveAs dialog will be shown to query the file name.
<para>This method may not be called unless all transactions, sub-transactions, and transaction groups that were opened by the API code were closed. 
That also implies that this method cannot be called during dynamic updates.</para></remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
Thrown if there are any transactions, sub-transactions or transaction groups which 
were opened by the API code, and not closed. All of these items must be handled 
before attempting to close the document.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
    </member>
    <member name="M:Autodesk.Revit.UI.UIDocument.SaveAndClose">
      <summary>Close the document, prompting the user for saving it when necessary.</summary>
      <returns>False if closing procedure fails or if saving of a modified document was requested but failed. 
Also returns False if closing is cancelled by an external application during 'DocumentClosing' event. 
When function succeeds, True is returned.</returns>
      <remarks>UI dialogs may be shown during the the call (e.g. when the document has been changed since last time it was saved) to get user responses.
The currently active document may not be closed by this function. It can only be closed via Revit's UI. </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
Thrown when attempting to close the currently active document.
Thrown if there are any transactions, sub-transactions or transaction groups which 
were opened by the API code, and not closed. All of these items must be handled 
before attempting to close the document.
</exception>
    </member>
    <member name="P:Autodesk.Revit.UI.UIDocument.Selection">
      <summary>Retrieve the currently selected Elements in Autodesk Revit.</summary>
      <remarks>Returns an object that represents the active selection. The Selection property returns an
object that represents the active selection when the command was started.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIDocument.GetRevitUIFamilyLoadOptions">
      <summary>Return the option object that allows you to use Revit's dialog boxes to let the user respond to questions that arise during loading of families. </summary>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown if 
this API method is invoked in UI less mode</exception>
    </member>
    <member name="T:Autodesk.Revit.UI.UIDocument">
      <summary>An object that represents an Autodesk Revit project opened in the Revit user interface.</summary>
      <remarks>
        <p>This class represents a document opened in the user interface and therefore offers interfaces
to work with settings and operations in the UI (for example, the active selection). Revit can have multiple
projects open and multiple views to those projects. The active or top most view will be the
active project and hence the active document which is available from the UIApplication object.</p>
        <p>Obtain the database level Document (which contains interfaces not related to the UI) via the 
Document property.  If you have a database level Document and need to access it from the UI, you can 
construct a new UIDocument from that object (the document must be open and visible in the UI to allow the methods to 
work successfully).</p>
      </remarks>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.TextBoxEnterPressedEventArgs">
      <summary>The event arguments used by TextBox's EnterPressed event.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.ComboBoxCurrentChangedEventArgs.NewValue">
      <summary>The current item for the ComboBox after the change.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.ComboBoxCurrentChangedEventArgs.OldValue">
      <summary>The current item for the ComboBox before the change.</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.ComboBoxCurrentChangedEventArgs">
      <summary>The event arguments used by ComboBox's CurrentChanged event.</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.ComboBoxDropDownClosedEventArgs">
      <summary>The event arguments used by ComboBox's DropDownClosed event.</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.ComboBoxDropDownOpenedEventArgs">
      <summary>The event arguments used by ComboBox's DropDownOpened event.</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.RibbonItemEventArgs.Application">
      <summary>
The current UIApplication.
</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.RibbonItemEventArgs">
      <summary>The base class of the RibbonItem event arguments which have UIApplication property.</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.ApplicationClosingEventArgs">
      <summary>
The event arguments used by the ApplicationClosing event.
</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.IdlingEventArgs">
      <summary>
The event arguments used by the Idling event.
</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.TaskDialogShowingEventArgs.DialogId">
      <summary>
String ID associated with the task dialog.
</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.TaskDialogShowingEventArgs.Message">
      <summary>
The message provided by the task dialog.
</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.TaskDialogShowingEventArgs">
      <summary>
The event arguments used by the DialogBoxShowing event when a Revit task dialog that prompts the user
for some action is shown.
</summary>
      <remarks>
When the application receives this object, a task dialog is about to be displayed in Revit that
requires user interaction. The OverrideResult function can be used to cause the dialog
to be dismissed and return a desired result code.
</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.MessageBoxShowingEventArgs.DialogType">
      <summary>
An integer that describes the standard Windows type of the dialog box.
</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.MessageBoxShowingEventArgs.Message">
      <summary>
The message that has been displayed in the dialog box.
</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.MessageBoxShowingEventArgs">
      <summary>
The event arguments used by the DialogBoxShowing event when a Windows message box is about to be displayed in Revit. 
</summary>
      <remarks>
When the application receives this object, a simple message box is about to be displayed in Revit that
requires user interaction. The OverrideResult function can be used to cause the dialog
to be dismissed and return a desired result code.
</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.Events.DialogBoxShowingEventArgs.OverrideResult(System.Int32)">
      <summary>
Call this method to cause the Autodesk Revit dialog to be dismissed with the specified return value.
</summary>
      <param name="result"> The result code you wish the Revit dialog to return. </param>
      <remarks>
The range of valid result values depends on the type of dialog as follows:
<list type="number"><item>
 DialogBox: Any non-zero value will cause a dialog to be dismissed.
 </item><item>
 MessageBox: Standard Message Box IDs, such as IDOK and IDCANCEL, are accepted.
 For all possible IDs, refer to the Windows API documentation.
 The ID used must be relevant to the buttons in a message box.
 </item><item>
 TaskDialog: Standard Message Box IDs and Revit Custom IDs are accepted,
 depending on the buttons used in a dialog. Standard buttons, such as OK
 and Cancel, have standard IDs described in Windows API documentation.
 Buttons with custom text have custom IDs with incremental values
 starting at 1001 for the left-most or top-most button in a task dialog.
 </item></list></remarks>
      <returns> True if the result code was accepted. </returns>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.DialogBoxShowingEventArgs.HelpId">
      <summary>
An ID that represents the dialog that has been displayed.
</summary>
      <remarks> Use this ID within your application to key suitable responses for the dialog. Note: this id is
not guaranteed to remain stable for different builds of Autodesk Revit.</remarks>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.DialogBoxShowingEventArgs">
      <summary>
The base class for the event arguments used by the DialogBoxShowing event. 
</summary>
      <remarks>
The actual type of the event arguments will be different depending upon the type of dialog shown.
When the application receives this object, a dialog is to be displayed in Revit that
requires user interaction. The OverrideResult function can be used to cause the dialog
to be dismissed and return a desired result code.
</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.ViewActivatedEventArgs.PreviousActiveView">
      <summary>
The previously active view. 
</summary>
      <remarks>
May be <see langword="null" /> if there was no previously active view.
</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.ViewActivatedEventArgs.CurrentActiveView">
      <summary>
The view that has just become active.
</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.ViewActivatedEventArgs">
      <summary>
The event arguments used by the ViewActivated event.
</summary>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.ViewActivatingEventArgs.CurrentActiveView">
      <summary>
The view that is currently active. 
</summary>
      <remarks>
May be <see langword="null" /> if there is no currently active view.
</remarks>
    </member>
    <member name="P:Autodesk.Revit.UI.Events.ViewActivatingEventArgs.NewActiveView">
      <summary>
The view that is going to become active.
</summary>
    </member>
    <member name="T:Autodesk.Revit.UI.Events.ViewActivatingEventArgs">
      <summary>
The event arguments used by the ViewActivating event.
</summary>
    </member>
    <member name="M:Autodesk.Revit.UI.IExternalCommandAvailability.IsCommandAvailable(Autodesk.Revit.UI.UIControlledApplication,Autodesk.Revit.DB.CategorySet)">
      <summary> Implement this method to provide control over whether your external command is enabled or disabled. </summary>
      <returns> Indicates whether Revit should enable or disable the corresponding external command. </returns>
      <param name="applicationData"> An ApplicationServices.Application object which contains reference to Application
needed by external command. </param>
      <param name="selectedCategories"> An list of categories of the elements which have been selected in Revit in the active document, 
or an empty set if no elements are selected or there is no active document. </param>
    </member>
    <member name="M:Autodesk.Revit.UI.IExternalCommandAvailability.IsCommandAvailable(Autodesk.Revit.VSTA.ApplicationEntryPoint,Autodesk.Revit.DB.CategorySet)">
      <summary> Implement this method to provide control over whether your external command is enabled or disabled. </summary>
      <returns> Indicates whether Revit should enable or disable the corresponding external command. </returns>
      <param name="applicationData"> An ApplicationServices.Application object which contains reference to Application
needed by external command. </param>
      <param name="selectedCategories"> An list of categories of the elements which have been selected in Revit in the active document, 
or an empty set if no elements are selected or there is no active document. </param>
    </member>
    <member name="M:Autodesk.Revit.UI.UIApplication.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.#ctor(Autodesk.Revit.ApplicationServices.Application)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.#ctor(Autodesk.Revit.ApplicationServices.Application)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.ActiveAddInId">
      <summary> Get current active external application or external command id. </summary>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.ActiveAddInId">
      <summary> Get current active external application or external command id. </summary>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.LoadedApplications">
      <summary> Returns an array of successfully loaded external applications. </summary>
      <remarks> This property can be used by your application to find all successfully
loaded external applications when Revit starts.</remarks>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.LoadedApplications">
      <summary> Returns an array of successfully loaded external applications. </summary>
      <remarks> This property can be used by your application to find all successfully
loaded external applications when Revit starts.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.GetRibbonPanels(System.String)">
      <summary> Get all the custom Panels on a designated Revit tab.</summary>
      <param name="tabName">The name of the tab on which the panels are located.</param>
      <remarks> Built-in panels will not be included. tabName must be the name of one of the tabs added 
by <see cref="M:Autodesk.Revit.UI.UIApplication.CreateRibbonTab(System.String)" />. 
This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.GetRibbonPanels(System.String)">
      <summary> Get all the custom Panels on a designated Revit tab.</summary>
      <param name="tabName">The name of the tab on which the panels are located.</param>
      <remarks> Built-in panels will not be included. tabName must be the name of one of the tabs added 
by <see cref="M:Autodesk.Revit.UI.UIApplication.CreateRibbonTab(System.String)" />. 
This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.GetRibbonPanels(Autodesk.Revit.UI.Tab)">
      <summary> Get all the custom Panels on a designated standard Revit tab.</summary>
      <param name="tab">The tab on which the panels are located.</param>
      <remarks> Built-in panels will not be included. This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.GetRibbonPanels(Autodesk.Revit.UI.Tab)">
      <summary> Get all the custom Panels on a designated standard Revit tab.</summary>
      <param name="tab">The tab on which the panels are located.</param>
      <remarks> Built-in panels will not be included. This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.GetRibbonPanels">
      <summary> Get all the custom Panels on Add-Ins tab of Revit.</summary>
      <remarks> The built-in panels won't be included and the panels added to tabs other than Add-Ins will not be included. 
This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.GetRibbonPanels">
      <summary> Get all the custom Panels on Add-Ins tab of Revit.</summary>
      <remarks> The built-in panels won't be included and the panels added to tabs other than Add-Ins will not be included. 
This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.CreateRibbonPanel(Autodesk.Revit.UI.Tab,System.String)">
      <summary> Create a new RibbonPanel on the designated standard Revit tab. </summary>
      <param name="tab">The target tab, on which the new panel will be created.</param>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">panelName is Empty or the tab is not valid.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">If more than 100 panels were created or the tab cannot be found. </exception>
      <remarks> This method will create a custom panel appending to the specified tab. This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.CreateRibbonPanel(Autodesk.Revit.UI.Tab,System.String)">
      <summary> Create a new RibbonPanel on the designated standard Revit tab. </summary>
      <param name="tab">The target tab, on which the new panel will be created.</param>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">panelName is Empty or the tab is not valid.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">If more than 100 panels were created or the tab cannot be found. </exception>
      <remarks> This method will create a custom panel appending to the specified tab. This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.CreateRibbonPanel(System.String)">
      <summary> Create a new RibbonPanel on the Add-Ins tab. </summary>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">panelName is Empty.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">If more than 100 panels were created. </exception>
      <remarks> This method will create a custom panel appending to the Revit AddIns tab. This method is not supported in VSTA. </remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.CreateRibbonPanel(System.String)">
      <summary> Create a new RibbonPanel on the Add-Ins tab. </summary>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">panelName is Empty.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">If more than 100 panels were created. </exception>
      <remarks> This method will create a custom panel appending to the Revit AddIns tab. This method is not supported in VSTA. </remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.CreateRibbonPanel(System.String,System.String)">
      <summary> Create a new RibbonPanel on the specified tab. </summary>
      <param name="tabName">The name of the tab, on which the new panel will be created.</param>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">tabName or panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">tabName or panelName is Empty.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Too many panels have been added to this tab (Maximum is 100).</exception>
      <remarks> This method will create a custom panel appending to the specified tab. This method is not supported in VSTA. </remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.CreateRibbonPanel(System.String,System.String)">
      <summary> Create a new RibbonPanel on the specified tab. </summary>
      <param name="tabName">The name of the tab, on which the new panel will be created.</param>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">tabName or panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">tabName or panelName is Empty.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Too many panels have been added to this tab (Maximum is 100).</exception>
      <remarks> This method will create a custom panel appending to the specified tab. This method is not supported in VSTA. </remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.CreateRibbonTab(System.String)">
      <summary> Creates a new tab on the Revit user interface. </summary>
      <param name="tabName">The name of the tab to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">tabName or panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">tabName or panelName is Empty or the tab name duplicates the name of another tab in the Revit UI.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Too many custom tabs have been created in this session. (Maximum is 20).</exception>
      <remarks> This method will create a custom tab at the end of the list of static tabs. If multiple tabs are added, they will be shown in the order added. This method is not supported in VSTA. </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\CreateRibbonPanel.cs" region="Autodesk.Revit.UI.UIControlledApplication.CreateRibbonTab(System.String)" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\CreateRibbonPanel.vb" region="Autodesk.Revit.UI.UIControlledApplication.CreateRibbonTab(System.String)" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.CreateRibbonTab(System.String)">
      <summary> Creates a new tab on the Revit user interface. </summary>
      <param name="tabName">The name of the tab to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">tabName or panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">tabName or panelName is Empty or the tab name duplicates the name of another tab in the Revit UI.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Too many custom tabs have been created in this session. (Maximum is 20).</exception>
      <remarks> This method will create a custom tab at the end of the list of static tabs. If multiple tabs are added, they will be shown in the order added. This method is not supported in VSTA. </remarks>
    </member>
    <member name="E:Autodesk.Revit.UI.UIControlledApplication.Idling">
      <summary>
Subscribe to the Idling event to be notified when Revit is not in an active tool or transaction.
</summary>
      <remarks>
        <para>This event is raised when it is safe for the API application to access the active 
 document between user interactions. The event is raised only when the Revit UI is 
 in a state where the user could successfully click on an API command button.</para>
        <para>
Handlers of this event are permitted to make modifications to any document (including the active document),
except for documents that are currently in read-only mode.
</para>
        <para>In order to change a document, you must begin a new transaction for that document.  
 This transaction will appear in the Revit undo stack and may be undone by the Revit user.</para>
        <para>This event is invoked between user actions in the Revit UI. If the handler for 
 this event requires a significant amount of processing time, users will perceive a slowdown 
 in the responsiveness of Revit. If the execution for updates can be safely split across 
 multiple calls to this event, the user perception of Revit responsiveness will be improved. </para>
        <para>Event is not cancellable. </para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.VSTA.ApplicationEntryPoint.Idling">
      <summary>
Subscribe to the Idling event to be notified when Revit is not in an active tool or transaction.
</summary>
      <remarks>
        <para>This event is raised when it is safe for the API application to access the active 
 document between user interactions. The event is raised only when the Revit UI is 
 in a state where the user could successfully click on an API command button.</para>
        <para>
Handlers of this event are permitted to make modifications to any document (including the active document),
except for documents that are currently in read-only mode.
</para>
        <para>In order to change a document, you must begin a new transaction for that document.  
 This transaction will appear in the Revit undo stack and may be undone by the Revit user.</para>
        <para>This event is invoked between user actions in the Revit UI. If the handler for 
 this event requires a significant amount of processing time, users will perceive a slowdown 
 in the responsiveness of Revit. If the execution for updates can be safely split across 
 multiple calls to this event, the user perception of Revit responsiveness will be improved. </para>
        <para>Event is not cancellable. </para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.UI.UIControlledApplication.DialogBoxShowing">
      <summary>   
Subscribe to the DialogBoxShowing event to be notified when Revit is just about to show a dialog box or a message box.
</summary>
      <remarks>
        <para>This event is raised when Revit is just about to show a dialog box or a message box.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.</para>
        <para>Depending on the type of the dialog that is being shown, the event's argument's type varies as follows:
When it is a dialog box, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.DialogBoxShowingEventArgs" />.
When it is a message box, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.MessageBoxShowingEventArgs" />,which is subclass of DialogBoxShowingEventArgs.
When it is a task dialog, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.TaskDialogShowingEventArgs" />,which is subclass of DialogBoxShowingEventArgs.</para>
        <para>No document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.VSTA.ApplicationEntryPoint.DialogBoxShowing">
      <summary>   
Subscribe to the DialogBoxShowing event to be notified when Revit is just about to show a dialog box or a message box.
</summary>
      <remarks>
        <para>This event is raised when Revit is just about to show a dialog box or a message box.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.</para>
        <para>Depending on the type of the dialog that is being shown, the event's argument's type varies as follows:
When it is a dialog box, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.DialogBoxShowingEventArgs" />.
When it is a message box, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.MessageBoxShowingEventArgs" />,which is subclass of DialogBoxShowingEventArgs.
When it is a task dialog, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.TaskDialogShowingEventArgs" />,which is subclass of DialogBoxShowingEventArgs.</para>
        <para>No document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.UI.UIControlledApplication.ApplicationClosing">
      <summary>
Subscribe to the ApplicationClosing event to be notified when the Revit application is just about to be closed.  
</summary>
      <remarks>
        <para>This event is raised when the Revit application is just about to be closed.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.</para>
        <para>No document may be modified at the time of the event.</para>
        <para>The sender object of this event is <see cref="T:Autodesk.Revit.UI.UIControlledApplication" /> object.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.VSTA.ApplicationEntryPoint.ApplicationClosing">
      <summary>
Subscribe to the ApplicationClosing event to be notified when the Revit application is just about to be closed.  
</summary>
      <remarks>
        <para>This event is raised when the Revit application is just about to be closed.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.</para>
        <para>No document may be modified at the time of the event.</para>
        <para>The sender object of this event is <see cref="T:Autodesk.Revit.UI.UIControlledApplication" /> object.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.UI.UIControlledApplication.ViewActivated">
      <summary>
Subscribe to the ViewActivated event to be notified immediately after Revit has finished activating a view of a document.
</summary>
      <remarks>
        <para>This event is raised immediately after Revit has finished activating a view of the document.
It is raised even when view activating failed or was cancelled (during ViewActivating event).</para>
        <para>Check the 'Status' field in event’s argument to see whether the action itself was successful or not.</para>
        <para>This event is not cancellable, for the process of view activating has already been finished.</para>
        <para>The document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.VSTA.ApplicationEntryPoint.ViewActivated">
      <summary>
Subscribe to the ViewActivated event to be notified immediately after Revit has finished activating a view of a document.
</summary>
      <remarks>
        <para>This event is raised immediately after Revit has finished activating a view of the document.
It is raised even when view activating failed or was cancelled (during ViewActivating event).</para>
        <para>Check the 'Status' field in event’s argument to see whether the action itself was successful or not.</para>
        <para>This event is not cancellable, for the process of view activating has already been finished.</para>
        <para>The document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.UI.UIControlledApplication.ViewActivating">
      <summary>
Subscribe to the ViewActivating event to be notified when Revit is just about to activate a view of a document. 
</summary>
      <remarks>
        <para>This event is raised when Revit is just about to activate a view of the document.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.
Your application is responsible for providing feedback to the user about the reason for the cancellation.</para>
        <para>The document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
        <para>Another <see cref="E:Autodesk.Revit.UI.UIApplication.ViewActivated" /> event will be raised immediately after view activating 
is finished.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.VSTA.ApplicationEntryPoint.ViewActivating">
      <summary>
Subscribe to the ViewActivating event to be notified when Revit is just about to activate a view of a document. 
</summary>
      <remarks>
        <para>This event is raised when Revit is just about to activate a view of the document.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.
Your application is responsible for providing feedback to the user about the reason for the cancellation.</para>
        <para>The document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
        <para>Another <see cref="E:Autodesk.Revit.UI.UIApplication.ViewActivated" /> event will be raised immediately after view activating 
is finished.</para>
      </remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.OpenAndActivateDocument(System.String)">
      <summary>
  Opens and activates a Revit document.
</summary>
      <remarks>
   This method, if successful, changes the active document.
   It is not allowed to have an open transaction in the active document when calling this method.
   Consequently, this method can only be used in manual transaction mode, not in automatic mode.
   Additionally, this method may not be called from inside an event handler.
</remarks>
      <param name="fileName">
   A full path to a revit file to be opened.
   The file can be either a Revit project, template, of family document.
</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">
   If <see langword="null" /> is passed as 'fileName'.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.FileArgumentNotFoundException">
   The file specified by 'fileName' cannot be found.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">
   The given 'fileName' is not a Revit file (a project, template, or family document).
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
        <ul>
          <li>If the active document is currently modifiable.</li>
          <li>If an API event handler is currently being executed.</li>
        </ul>
      </exception>
      <since>
   2012
</since>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.OpenAndActivateDocument(System.String)">
      <summary>
  Opens and activates a Revit document.
</summary>
      <remarks>
   This method, if successful, changes the active document.
   It is not allowed to have an open transaction in the active document when calling this method.
   Consequently, this method can only be used in manual transaction mode, not in automatic mode.
   Additionally, this method may not be called from inside an event handler.
</remarks>
      <param name="fileName">
   A full path to a revit file to be opened.
   The file can be either a Revit project, template, of family document.
</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">
   If <see langword="null" /> is passed as 'fileName'.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.FileArgumentNotFoundException">
   The file specified by 'fileName' cannot be found.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">
   The given 'fileName' is not a Revit file (a project, template, or family document).
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
        <ul>
          <li>If the active document is currently modifiable.</li>
          <li>If an API event handler is currently being executed.</li>
        </ul>
      </exception>
      <since>
   2012
</since>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.DrawingAreaExtents">
      <summary>Get the rectangle that represents the screen pixel coordinates of drawing area. </summary>
      <remarks>The drawing area of the Revit window displays views (and sheets and schedules) of the current project. 
The size of drawing area restricts the max size of the view windows.
If there is no project opened, null will be returned. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.DrawingAreaExtents">
      <summary>Get the rectangle that represents the screen pixel coordinates of drawing area. </summary>
      <remarks>The drawing area of the Revit window displays views (and sheets and schedules) of the current project. 
The size of drawing area restricts the max size of the view windows.
If there is no project opened, null will be returned. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.MainWindowExtents">
      <summary>Get the rectangle that represents the screen pixel coordinates of Revit main window. </summary>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.MainWindowExtents">
      <summary>Get the rectangle that represents the screen pixel coordinates of Revit main window. </summary>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.ActiveUIDocument">
      <summary>Provides access to an object that represents the currently active project.</summary>
      <remarks>External API commands can access this property in read-only mode only!
The ability to modify the property is reserved for future implementations.</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when attempting to modify the property.</exception>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.ActiveUIDocument">
      <summary>Provides access to an object that represents the currently active project.</summary>
      <remarks>External API commands can access this property in read-only mode only!
The ability to modify the property is reserved for future implementations.</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when attempting to modify the property.</exception>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.Application">
      <summary>Returns the database level Application represented by this UI level Application.</summary>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.Application">
      <summary>Returns the database level Application represented by this UI level Application.</summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.#ctor(Autodesk.Revit.DB.Document)">
      <summary> Use a database level Document to construct a UI-level Document.</summary>
    </member>
    <member name="P:Autodesk.Revit.VSTA.DocumentEntryPoint.Application">
      <summary> Retrieves an object that represents the current Application.</summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.PromptForFamilyInstancePlacement(Autodesk.Revit.DB.FamilySymbol)">
      <summary>Prompts the user to place instances of the specified FamilySymbol.</summary>
      <param name="familySymbol">The FamilySymbol.</param>
      <remarks> This method opens its own transaction, so it's not permitted to be invoked in an active transaction.
In a single invocation, the user can place multiple instances of the input family type until they finish the 
placement (with Cancel or ESC or a click elsewhere in the UI). The user will not be permitted to change the type to be placed. 
Users are not permitted to change the active view during this placement operation (the operation will be completed).</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when 
this API method is invoked in an active transaction,
or this document is not active, 
or this is a family document and the instances of this family symbol can not exist in the current family, 
or this family symbol has no command to create instance, 
or the command to create instance is disabled in active view.</exception>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.VSTA.DocumentEntryPoint.Document">
      <summary>Returns the database level document represented by this UI-level document.</summary>
    </member>
    <member name="P:Autodesk.Revit.VSTA.DocumentEntryPoint.ActiveView">
      <summary>
   The currently active view of the currently active document.
</summary>
      <since>2012</since>
      <remarks>
        <para>This property is applicable to the currently active document only.</para>
        <para>The active view can only be changed when:
   <ul><li>There is no open transaction.</li><li><see cref="P:Autodesk.Revit.DB.Document.IsModifiable" /> is false.</li><li><see cref="P:Autodesk.Revit.DB.Document.IsReadOnly" /> is false.</li><li>ViewActivating, ViewActivated, and any pre-action of events (such as DocumentSaving or DocumentClosingevents) are not being handled.</li></ul></para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">
   When setting the property: If the 'view' argument is NULL.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">
 When setting the property:
 <ul><li>If the given view is not a valid view of the document; -or-</li><li>If the given view is a template view; -or-</li><li>If the given view is an internal view.</li></ul></exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
        <para>When getting the property: If the document is not currently active.</para>
        <para>When setting the property:
   <ul><li>If the document is not currently active; -or-</li><li>If the document is currently modifiable (i.e. with an active transaction); -or-</li><li>If the document is currently in read-only state; -or-</li><li>When invoked during either ViewActivating or ViewActivated event; -or-</li><li>When invoked during any pre-action kind of event, such as DocumentSaving, DocumentClosing, etc.</li></ul></para>
      </exception>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.RefreshActiveView">
      <summary>Refresh the display of the active view in the active document.</summary>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.ShowElements(System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId})">
      <summary>Shows the elements by zoom to fit.</summary>
      <param name="elementIds">The set of element ids which will be shown.</param>
      <remarks>Places all the elements on the screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.ShowElements(Autodesk.Revit.DB.ElementSet)">
      <summary>Shows the elements by zoom to fit.</summary>
      <param name="elements">The set of elements that will be shown.</param>
      <remarks>Places all the elements on the screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.ShowElements(Autodesk.Revit.DB.Element)">
      <summary>Shows the element by zoom to fit.</summary>
      <param name="element">Element that will be shown.</param>
      <remarks>Places the element in the center of screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.ShowElements(Autodesk.Revit.DB.ElementId)">
      <overloads>Shows one or more elements by zoom to fit.</overloads>
      <summary>Shows the element by zoom to fit.</summary>
      <param name="elementId">Element id that will be shown.</param>
      <remarks>Places the element in the center of screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.SaveAs">
      <summary>Saves the document to a file name obtained from the Revit user.</summary>
      <returns>False if save operation fails.
Also returns False if saving as is cancelled by an external application during 'DocumentSavingAs' event.
When function succeeds, True is returned.</returns>
      <remarks>Because the argument list is null, a SaveAs dialog will be shown to query the file name.
<para>This method may not be called unless all transactions, sub-transactions, and transaction groups that were opened by the API code were closed. 
That also implies that this method cannot be called during dynamic updates.</para></remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
Thrown if there are any transactions, sub-transactions or transaction groups which 
were opened by the API code, and not closed. All of these items must be handled 
before attempting to close the document.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.SaveAndClose">
      <summary>Close the document, prompting the user for saving it when necessary.</summary>
      <returns>False if closing procedure fails or if saving of a modified document was requested but failed. 
Also returns False if closing is cancelled by an external application during 'DocumentClosing' event. 
When function succeeds, True is returned.</returns>
      <remarks>UI dialogs may be shown during the the call (e.g. when the document has been changed since last time it was saved) to get user responses.
The currently active document may not be closed by this function. It can only be closed via Revit's UI. </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
Thrown when attempting to close the currently active document.
Thrown if there are any transactions, sub-transactions or transaction groups which 
were opened by the API code, and not closed. All of these items must be handled 
before attempting to close the document.
</exception>
    </member>
    <member name="P:Autodesk.Revit.VSTA.DocumentEntryPoint.Selection">
      <summary>Retrieve the currently selected Elements in Autodesk Revit.</summary>
      <remarks>Returns an object that represents the active selection. The Selection property returns an
object that represents the active selection when the command was started.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.GetRevitUIFamilyLoadOptions">
      <summary>Return the option object that allows you to use Revit's dialog boxes to let the user respond to questions that arise during loading of families. </summary>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown if 
this API method is invoked in UI less mode</exception>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.UI.IExternalCommandAvailability.IsCommandAvailable(Autodesk.Revit.UI.UIControlledApplication,Autodesk.Revit.DB.CategorySet)">
      <summary> Implement this method to provide control over whether your external command is enabled or disabled. </summary>
      <returns> Indicates whether Revit should enable or disable the corresponding external command. </returns>
      <param name="applicationData"> An ApplicationServices.Application object which contains reference to Application
needed by external command. </param>
      <param name="selectedCategories"> An list of categories of the elements which have been selected in Revit in the active document, 
or an empty set if no elements are selected or there is no active document. </param>
    </member>
    <member name="M:Autodesk.Revit.UI.IExternalCommandAvailability.IsCommandAvailable(Autodesk.Revit.VSTA.ApplicationEntryPoint,Autodesk.Revit.DB.CategorySet)">
      <summary> Implement this method to provide control over whether your external command is enabled or disabled. </summary>
      <returns> Indicates whether Revit should enable or disable the corresponding external command. </returns>
      <param name="applicationData"> An ApplicationServices.Application object which contains reference to Application
needed by external command. </param>
      <param name="selectedCategories"> An list of categories of the elements which have been selected in Revit in the active document, 
or an empty set if no elements are selected or there is no active document. </param>
    </member>
    <member name="M:Autodesk.Revit.UI.UIApplication.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.#ctor(Autodesk.Revit.ApplicationServices.Application)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.#ctor(Autodesk.Revit.ApplicationServices.Application)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.ActiveAddInId">
      <summary> Get current active external application or external command id. </summary>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.ActiveAddInId">
      <summary> Get current active external application or external command id. </summary>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.LoadedApplications">
      <summary> Returns an array of successfully loaded external applications. </summary>
      <remarks> This property can be used by your application to find all successfully
loaded external applications when Revit starts.</remarks>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.LoadedApplications">
      <summary> Returns an array of successfully loaded external applications. </summary>
      <remarks> This property can be used by your application to find all successfully
loaded external applications when Revit starts.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.GetRibbonPanels(System.String)">
      <summary> Get all the custom Panels on a designated Revit tab.</summary>
      <param name="tabName">The name of the tab on which the panels are located.</param>
      <remarks> Built-in panels will not be included. tabName must be the name of one of the tabs added 
by <see cref="M:Autodesk.Revit.UI.UIApplication.CreateRibbonTab(System.String)" />. 
This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.GetRibbonPanels(System.String)">
      <summary> Get all the custom Panels on a designated Revit tab.</summary>
      <param name="tabName">The name of the tab on which the panels are located.</param>
      <remarks> Built-in panels will not be included. tabName must be the name of one of the tabs added 
by <see cref="M:Autodesk.Revit.UI.UIApplication.CreateRibbonTab(System.String)" />. 
This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.GetRibbonPanels(Autodesk.Revit.UI.Tab)">
      <summary> Get all the custom Panels on a designated standard Revit tab.</summary>
      <param name="tab">The tab on which the panels are located.</param>
      <remarks> Built-in panels will not be included. This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.GetRibbonPanels(Autodesk.Revit.UI.Tab)">
      <summary> Get all the custom Panels on a designated standard Revit tab.</summary>
      <param name="tab">The tab on which the panels are located.</param>
      <remarks> Built-in panels will not be included. This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.GetRibbonPanels">
      <summary> Get all the custom Panels on Add-Ins tab of Revit.</summary>
      <remarks> The built-in panels won't be included and the panels added to tabs other than Add-Ins will not be included. 
This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.GetRibbonPanels">
      <summary> Get all the custom Panels on Add-Ins tab of Revit.</summary>
      <remarks> The built-in panels won't be included and the panels added to tabs other than Add-Ins will not be included. 
This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.CreateRibbonPanel(Autodesk.Revit.UI.Tab,System.String)">
      <summary> Create a new RibbonPanel on the designated standard Revit tab. </summary>
      <param name="tab">The target tab, on which the new panel will be created.</param>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">panelName is Empty or the tab is not valid.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">If more than 100 panels were created or the tab cannot be found. </exception>
      <remarks> This method will create a custom panel appending to the specified tab. This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.CreateRibbonPanel(Autodesk.Revit.UI.Tab,System.String)">
      <summary> Create a new RibbonPanel on the designated standard Revit tab. </summary>
      <param name="tab">The target tab, on which the new panel will be created.</param>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">panelName is Empty or the tab is not valid.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">If more than 100 panels were created or the tab cannot be found. </exception>
      <remarks> This method will create a custom panel appending to the specified tab. This method is not supported in VSTA.</remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.CreateRibbonPanel(System.String)">
      <summary> Create a new RibbonPanel on the Add-Ins tab. </summary>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">panelName is Empty.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">If more than 100 panels were created. </exception>
      <remarks> This method will create a custom panel appending to the Revit AddIns tab. This method is not supported in VSTA. </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\CreateRibbonPanel.cs" region="Autodesk.Revit.UI.UIApplication.CreateRibbonPanel(string)" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\CreateRibbonPanel.vb" region="Autodesk.Revit.UI.UIApplication.CreateRibbonPanel(string)" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.CreateRibbonPanel(System.String)">
      <summary> Create a new RibbonPanel on the Add-Ins tab. </summary>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">panelName is Empty.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">If more than 100 panels were created. </exception>
      <remarks> This method will create a custom panel appending to the Revit AddIns tab. This method is not supported in VSTA. </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\CreateRibbonPanel.cs" region="Autodesk.Revit.UI.UIApplication.CreateRibbonPanel(string)" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\CreateRibbonPanel.vb" region="Autodesk.Revit.UI.UIApplication.CreateRibbonPanel(string)" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.CreateRibbonPanel(System.String,System.String)">
      <summary> Create a new RibbonPanel on the specified tab. </summary>
      <param name="tabName">The name of the tab, on which the new panel will be created.</param>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">tabName or panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">tabName or panelName is Empty.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Too many panels have been added to this tab (Maximum is 100).</exception>
      <remarks> This method will create a custom panel appending to the specified tab. This method is not supported in VSTA. </remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.CreateRibbonPanel(System.String,System.String)">
      <summary> Create a new RibbonPanel on the specified tab. </summary>
      <param name="tabName">The name of the tab, on which the new panel will be created.</param>
      <param name="panelName">The name of the panel to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">tabName or panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">tabName or panelName is Empty.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Too many panels have been added to this tab (Maximum is 100).</exception>
      <remarks> This method will create a custom panel appending to the specified tab. This method is not supported in VSTA. </remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.CreateRibbonTab(System.String)">
      <summary> Creates a new tab on the Revit user interface. </summary>
      <param name="tabName">The name of the tab to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">tabName or panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">tabName or panelName is Empty or the tab name duplicates the name of another tab in the Revit UI.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Too many custom tabs have been created in this session. (Maximum is 20).</exception>
      <remarks> This method will create a custom tab at the end of the list of static tabs. If multiple tabs are added, they will be shown in the order added. This method is not supported in VSTA. </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit\CreateRibbonPanel.cs" region="Autodesk.Revit.UI.UIControlledApplication.CreateRibbonTab(System.String)" />
        <code lang="VB" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesVBNET\Autodesk_Revit\CreateRibbonPanel.vb" region="Autodesk.Revit.UI.UIControlledApplication.CreateRibbonTab(System.String)" />
      </example>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.CreateRibbonTab(System.String)">
      <summary> Creates a new tab on the Revit user interface. </summary>
      <param name="tabName">The name of the tab to be created.</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">tabName or panelName is <see langword="null" />.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">tabName or panelName is Empty or the tab name duplicates the name of another tab in the Revit UI.</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Too many custom tabs have been created in this session. (Maximum is 20).</exception>
      <remarks> This method will create a custom tab at the end of the list of static tabs. If multiple tabs are added, they will be shown in the order added. This method is not supported in VSTA. </remarks>
    </member>
    <member name="E:Autodesk.Revit.UI.UIControlledApplication.Idling">
      <summary>
Subscribe to the Idling event to be notified when Revit is not in an active tool or transaction.
</summary>
      <remarks>
        <para>This event is raised when it is safe for the API application to access the active 
 document between user interactions. The event is raised only when the Revit UI is 
 in a state where the user could successfully click on an API command button.</para>
        <para>
Handlers of this event are permitted to make modifications to any document (including the active document),
except for documents that are currently in read-only mode.
</para>
        <para>In order to change a document, you must begin a new transaction for that document.  
 This transaction will appear in the Revit undo stack and may be undone by the Revit user.</para>
        <para>This event is invoked between user actions in the Revit UI. If the handler for 
 this event requires a significant amount of processing time, users will perceive a slowdown 
 in the responsiveness of Revit. If the execution for updates can be safely split across 
 multiple calls to this event, the user perception of Revit responsiveness will be improved. </para>
        <para>Event is not cancellable. </para>
      </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit_Events\Events.cs" region="Autodesk.Revit.UI.UIApplication.Idling" />
      </example>
    </member>
    <member name="E:Autodesk.Revit.VSTA.ApplicationEntryPoint.Idling">
      <summary>
Subscribe to the Idling event to be notified when Revit is not in an active tool or transaction.
</summary>
      <remarks>
        <para>This event is raised when it is safe for the API application to access the active 
 document between user interactions. The event is raised only when the Revit UI is 
 in a state where the user could successfully click on an API command button.</para>
        <para>
Handlers of this event are permitted to make modifications to any document (including the active document),
except for documents that are currently in read-only mode.
</para>
        <para>In order to change a document, you must begin a new transaction for that document.  
 This transaction will appear in the Revit undo stack and may be undone by the Revit user.</para>
        <para>This event is invoked between user actions in the Revit UI. If the handler for 
 this event requires a significant amount of processing time, users will perceive a slowdown 
 in the responsiveness of Revit. If the execution for updates can be safely split across 
 multiple calls to this event, the user perception of Revit responsiveness will be improved. </para>
        <para>Event is not cancellable. </para>
      </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit_Events\Events.cs" region="Autodesk.Revit.UI.UIApplication.Idling" />
      </example>
    </member>
    <member name="E:Autodesk.Revit.UI.UIControlledApplication.DialogBoxShowing">
      <summary>   
Subscribe to the DialogBoxShowing event to be notified when Revit is just about to show a dialog box or a message box.
</summary>
      <remarks>
        <para>This event is raised when Revit is just about to show a dialog box or a message box.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.</para>
        <para>Depending on the type of the dialog that is being shown, the event's argument's type varies as follows:
When it is a dialog box, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.DialogBoxShowingEventArgs" />.
When it is a message box, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.MessageBoxShowingEventArgs" />,which is subclass of DialogBoxShowingEventArgs.
When it is a task dialog, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.TaskDialogShowingEventArgs" />,which is subclass of DialogBoxShowingEventArgs.</para>
        <para>No document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
      </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit_Events\DialogBoxShowing.cs" region="Autodesk.Revit.UI.UIApplication.DialogBoxShowing" />
      </example>
    </member>
    <member name="E:Autodesk.Revit.VSTA.ApplicationEntryPoint.DialogBoxShowing">
      <summary>   
Subscribe to the DialogBoxShowing event to be notified when Revit is just about to show a dialog box or a message box.
</summary>
      <remarks>
        <para>This event is raised when Revit is just about to show a dialog box or a message box.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.</para>
        <para>Depending on the type of the dialog that is being shown, the event's argument's type varies as follows:
When it is a dialog box, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.DialogBoxShowingEventArgs" />.
When it is a message box, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.MessageBoxShowingEventArgs" />,which is subclass of DialogBoxShowingEventArgs.
When it is a task dialog, the event’s argument is an object of <see cref="T:Autodesk.Revit.UI.Events.TaskDialogShowingEventArgs" />,which is subclass of DialogBoxShowingEventArgs.</para>
        <para>No document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
      </remarks>
      <example>
        <code lang="C#" source="..\..\..\..\APIProjects\Samples\OnlineHelpSamplesCSharp\Autodesk_Revit_Events\DialogBoxShowing.cs" region="Autodesk.Revit.UI.UIApplication.DialogBoxShowing" />
      </example>
    </member>
    <member name="E:Autodesk.Revit.UI.UIControlledApplication.ApplicationClosing">
      <summary>
Subscribe to the ApplicationClosing event to be notified when the Revit application is just about to be closed.  
</summary>
      <remarks>
        <para>This event is raised when the Revit application is just about to be closed.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.</para>
        <para>No document may be modified at the time of the event.</para>
        <para>The sender object of this event is <see cref="T:Autodesk.Revit.UI.UIControlledApplication" /> object.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.VSTA.ApplicationEntryPoint.ApplicationClosing">
      <summary>
Subscribe to the ApplicationClosing event to be notified when the Revit application is just about to be closed.  
</summary>
      <remarks>
        <para>This event is raised when the Revit application is just about to be closed.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.</para>
        <para>No document may be modified at the time of the event.</para>
        <para>The sender object of this event is <see cref="T:Autodesk.Revit.UI.UIControlledApplication" /> object.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.UI.UIControlledApplication.ViewActivated">
      <summary>
Subscribe to the ViewActivated event to be notified immediately after Revit has finished activating a view of a document.
</summary>
      <remarks>
        <para>This event is raised immediately after Revit has finished activating a view of the document.
It is raised even when view activating failed or was cancelled (during ViewActivating event).</para>
        <para>Check the 'Status' field in event’s argument to see whether the action itself was successful or not.</para>
        <para>This event is not cancellable, for the process of view activating has already been finished.</para>
        <para>The document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.VSTA.ApplicationEntryPoint.ViewActivated">
      <summary>
Subscribe to the ViewActivated event to be notified immediately after Revit has finished activating a view of a document.
</summary>
      <remarks>
        <para>This event is raised immediately after Revit has finished activating a view of the document.
It is raised even when view activating failed or was cancelled (during ViewActivating event).</para>
        <para>Check the 'Status' field in event’s argument to see whether the action itself was successful or not.</para>
        <para>This event is not cancellable, for the process of view activating has already been finished.</para>
        <para>The document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.UI.UIControlledApplication.ViewActivating">
      <summary>
Subscribe to the ViewActivating event to be notified when Revit is just about to activate a view of a document. 
</summary>
      <remarks>
        <para>This event is raised when Revit is just about to activate a view of the document.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.
Your application is responsible for providing feedback to the user about the reason for the cancellation.</para>
        <para>The document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
        <para>Another <see cref="E:Autodesk.Revit.UI.UIApplication.ViewActivated" /> event will be raised immediately after view activating 
is finished.</para>
      </remarks>
    </member>
    <member name="E:Autodesk.Revit.VSTA.ApplicationEntryPoint.ViewActivating">
      <summary>
Subscribe to the ViewActivating event to be notified when Revit is just about to activate a view of a document. 
</summary>
      <remarks>
        <para>This event is raised when Revit is just about to activate a view of the document.</para>
        <para>Event is not cancellable. The 'Cancellable' property of event’s argument is always False.
Your application is responsible for providing feedback to the user about the reason for the cancellation.</para>
        <para>The document may be modified during this event.</para>
        <para>The following API functions are not available for the current document during this event:
<ul><li><see cref="M:Autodesk.Revit.DB.Document.Close" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.Save" /> and similar overloads.</li><li><see cref="M:Autodesk.Revit.DB.Document.SaveAs(System.String)" /> and similar overloads.</li></ul></para>
        <para>Exception <see cref="T:Autodesk.Revit.Exceptions.InvalidOperationException" /> will be thrown if any of the above methods is called during this event.</para>
        <para>Another <see cref="E:Autodesk.Revit.UI.UIApplication.ViewActivated" /> event will be raised immediately after view activating 
is finished.</para>
      </remarks>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.OpenAndActivateDocument(System.String)">
      <summary>
  Opens and activates a Revit document.
</summary>
      <remarks>
   This method, if successful, changes the active document.
   It is not allowed to have an open transaction in the active document when calling this method.
   Consequently, this method can only be used in manual transaction mode, not in automatic mode.
   Additionally, this method may not be called from inside an event handler.
</remarks>
      <param name="fileName">
   A full path to a revit file to be opened.
   The file can be either a Revit project, template, of family document.
</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">
   If <see langword="null" /> is passed as 'fileName'.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.FileArgumentNotFoundException">
   The file specified by 'fileName' cannot be found.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">
   The given 'fileName' is not a Revit file (a project, template, or family document).
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
        <ul>
          <li>If the active document is currently modifiable.</li>
          <li>If an API event handler is currently being executed.</li>
        </ul>
      </exception>
      <since>
   2012
</since>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.OpenAndActivateDocument(System.String)">
      <summary>
  Opens and activates a Revit document.
</summary>
      <remarks>
   This method, if successful, changes the active document.
   It is not allowed to have an open transaction in the active document when calling this method.
   Consequently, this method can only be used in manual transaction mode, not in automatic mode.
   Additionally, this method may not be called from inside an event handler.
</remarks>
      <param name="fileName">
   A full path to a revit file to be opened.
   The file can be either a Revit project, template, of family document.
</param>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">
   If <see langword="null" /> is passed as 'fileName'.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.FileArgumentNotFoundException">
   The file specified by 'fileName' cannot be found.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">
   The given 'fileName' is not a Revit file (a project, template, or family document).
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
        <ul>
          <li>If the active document is currently modifiable.</li>
          <li>If an API event handler is currently being executed.</li>
        </ul>
      </exception>
      <since>
   2012
</since>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.DrawingAreaExtents">
      <summary>Get the rectangle that represents the screen pixel coordinates of drawing area. </summary>
      <remarks>The drawing area of the Revit window displays views (and sheets and schedules) of the current project. 
The size of drawing area restricts the max size of the view windows.
If there is no project opened, null will be returned. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.DrawingAreaExtents">
      <summary>Get the rectangle that represents the screen pixel coordinates of drawing area. </summary>
      <remarks>The drawing area of the Revit window displays views (and sheets and schedules) of the current project. 
The size of drawing area restricts the max size of the view windows.
If there is no project opened, null will be returned. </remarks>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.MainWindowExtents">
      <summary>Get the rectangle that represents the screen pixel coordinates of Revit main window. </summary>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.MainWindowExtents">
      <summary>Get the rectangle that represents the screen pixel coordinates of Revit main window. </summary>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.ActiveUIDocument">
      <summary>Provides access to an object that represents the currently active project.</summary>
      <remarks>External API commands can access this property in read-only mode only!
The ability to modify the property is reserved for future implementations.</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when attempting to modify the property.</exception>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.ActiveUIDocument">
      <summary>Provides access to an object that represents the currently active project.</summary>
      <remarks>External API commands can access this property in read-only mode only!
The ability to modify the property is reserved for future implementations.</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when attempting to modify the property.</exception>
    </member>
    <member name="P:Autodesk.Revit.UI.UIControlledApplication.Application">
      <summary>Returns the database level Application represented by this UI level Application.</summary>
    </member>
    <member name="P:Autodesk.Revit.VSTA.ApplicationEntryPoint.Application">
      <summary>Returns the database level Application represented by this UI level Application.</summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.#ctor(Autodesk.Revit.DB.Document)">
      <summary> Use a database level Document to construct a UI-level Document.</summary>
    </member>
    <member name="P:Autodesk.Revit.VSTA.DocumentEntryPoint.Application">
      <summary> Retrieves an object that represents the current Application.</summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.PromptForFamilyInstancePlacement(Autodesk.Revit.DB.FamilySymbol)">
      <summary>Prompts the user to place instances of the specified FamilySymbol.</summary>
      <param name="familySymbol">The FamilySymbol.</param>
      <remarks> This method opens its own transaction, so it's not permitted to be invoked in an active transaction.
In a single invocation, the user can place multiple instances of the input family type until they finish the 
placement (with Cancel or ESC or a click elsewhere in the UI). The user will not be permitted to change the type to be placed. 
Users are not permitted to change the active view during this placement operation (the operation will be completed).</remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown when 
this API method is invoked in an active transaction,
or this document is not active, 
or this is a family document and the instances of this family symbol can not exist in the current family, 
or this family symbol has no command to create instance, 
or the command to create instance is disabled in active view.</exception>
      <since>2011</since>
    </member>
    <member name="P:Autodesk.Revit.VSTA.DocumentEntryPoint.Document">
      <summary>Returns the database level document represented by this UI-level document.</summary>
    </member>
    <member name="P:Autodesk.Revit.VSTA.DocumentEntryPoint.ActiveView">
      <summary>
   The currently active view of the currently active document.
</summary>
      <since>2012</since>
      <remarks>
        <para>This property is applicable to the currently active document only.</para>
        <para>The active view can only be changed when:
   <ul><li>There is no open transaction.</li><li><see cref="P:Autodesk.Revit.DB.Document.IsModifiable" /> is false.</li><li><see cref="P:Autodesk.Revit.DB.Document.IsReadOnly" /> is false.</li><li>ViewActivating, ViewActivated, and any pre-action of events (such as DocumentSaving or DocumentClosingevents) are not being handled.</li></ul></para>
      </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentNullException">
   When setting the property: If the 'view' argument is NULL.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ArgumentException">
 When setting the property:
 <ul><li>If the given view is not a valid view of the document; -or-</li><li>If the given view is a template view; -or-</li><li>If the given view is an internal view.</li></ul></exception>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
        <para>When getting the property: If the document is not currently active.</para>
        <para>When setting the property:
   <ul><li>If the document is not currently active; -or-</li><li>If the document is currently modifiable (i.e. with an active transaction); -or-</li><li>If the document is currently in read-only state; -or-</li><li>When invoked during either ViewActivating or ViewActivated event; -or-</li><li>When invoked during any pre-action kind of event, such as DocumentSaving, DocumentClosing, etc.</li></ul></para>
      </exception>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.RefreshActiveView">
      <summary>Refresh the display of the active view in the active document.</summary>
      <since>2011</since>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.ShowElements(System.Collections.Generic.ICollection{Autodesk.Revit.DB.ElementId})">
      <summary>Shows the elements by zoom to fit.</summary>
      <param name="elementIds">The set of element ids which will be shown.</param>
      <remarks>Places all the elements on the screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.ShowElements(Autodesk.Revit.DB.ElementSet)">
      <summary>Shows the elements by zoom to fit.</summary>
      <param name="elements">The set of elements that will be shown.</param>
      <remarks>Places all the elements on the screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.ShowElements(Autodesk.Revit.DB.Element)">
      <summary>Shows the element by zoom to fit.</summary>
      <param name="element">Element that will be shown.</param>
      <remarks>Places the element in the center of screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.ShowElements(Autodesk.Revit.DB.ElementId)">
      <overloads>Shows one or more elements by zoom to fit.</overloads>
      <summary>Shows the element by zoom to fit.</summary>
      <param name="elementId">Element id that will be shown.</param>
      <remarks>Places the element in the center of screen by moving the view.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.SaveAs">
      <summary>Saves the document to a file name obtained from the Revit user.</summary>
      <returns>False if save operation fails.
Also returns False if saving as is cancelled by an external application during 'DocumentSavingAs' event.
When function succeeds, True is returned.</returns>
      <remarks>Because the argument list is null, a SaveAs dialog will be shown to query the file name.
<para>This method may not be called unless all transactions, sub-transactions, and transaction groups that were opened by the API code were closed. 
That also implies that this method cannot be called during dynamic updates.</para></remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
Thrown if there are any transactions, sub-transactions or transaction groups which 
were opened by the API code, and not closed. All of these items must be handled 
before attempting to close the document.
</exception>
      <exception cref="T:Autodesk.Revit.Exceptions.ForbiddenForDynamicUpdateException">Thrown if this method is called during dynamic update.</exception>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.SaveAndClose">
      <summary>Close the document, prompting the user for saving it when necessary.</summary>
      <returns>False if closing procedure fails or if saving of a modified document was requested but failed. 
Also returns False if closing is cancelled by an external application during 'DocumentClosing' event. 
When function succeeds, True is returned.</returns>
      <remarks>UI dialogs may be shown during the the call (e.g. when the document has been changed since last time it was saved) to get user responses.
The currently active document may not be closed by this function. It can only be closed via Revit's UI. </remarks>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">
Thrown when attempting to close the currently active document.
Thrown if there are any transactions, sub-transactions or transaction groups which 
were opened by the API code, and not closed. All of these items must be handled 
before attempting to close the document.
</exception>
    </member>
    <member name="P:Autodesk.Revit.VSTA.DocumentEntryPoint.Selection">
      <summary>Retrieve the currently selected Elements in Autodesk Revit.</summary>
      <remarks>Returns an object that represents the active selection. The Selection property returns an
object that represents the active selection when the command was started.</remarks>
    </member>
    <member name="M:Autodesk.Revit.VSTA.DocumentEntryPoint.GetRevitUIFamilyLoadOptions">
      <summary>Return the option object that allows you to use Revit's dialog boxes to let the user respond to questions that arise during loading of families. </summary>
      <exception cref="T:Autodesk.Revit.Exceptions.InvalidOperationException">Thrown if 
this API method is invoked in UI less mode</exception>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.UI.UIControlledApplication.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
    <member name="M:Autodesk.Revit.VSTA.ApplicationEntryPoint.#ctor(Autodesk.Revit.ApplicationServices.ControlledApplication)">
      <summary> Use a database level Application to construct a UI-level Application. </summary>
    </member>
  </members>
</doc>